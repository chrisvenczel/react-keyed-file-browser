{"version":3,"file":"main.iframe.bundle.js","sources":["webpack:///./.storybook/preview.js","webpack:///./.storybook/preview.js-generated-config-entry.js","webpack:///./dist/react-keyed-file-browser.css?e9fa","webpack:///./generated-stories-entry.js","webpack:///./dist/react-keyed-file-browser.css","webpack:///./src/actions/default.js","webpack:///./src/actions/index.js","webpack:///./src/base-file.js","webpack:///./src/base-folder.js","webpack:///./src/browser.js","webpack:///./src/confirmations/default.js","webpack:///./src/confirmations/index.js","webpack:///./src/confirmations/multiple.js","webpack:///./src/constants.js","webpack:///./src/details/default.js","webpack:///./src/details/index.js","webpack:///./src/files/index.js","webpack:///./src/files/list-thumbnail.js","webpack:///./src/files/simple-list-thumbnail.js","webpack:///./src/files/table.js","webpack:///./src/files/utils.js","webpack:///./src/filters/default.js","webpack:///./src/filters/index.js","webpack:///./src/folders/index.js","webpack:///./src/folders/list-thumbnail.js","webpack:///./src/folders/table.js","webpack:///./src/groupers/by-folder.js","webpack:///./src/groupers/by-modified.js","webpack:///./src/groupers/index.js","webpack:///./src/groupers/utils.js","webpack:///./src/headers/index.js","webpack:///./src/headers/table.js","webpack:///./src/icons/FontAwesome.js","webpack:///./src/icons/index.js","webpack:///./src/index.js","webpack:///./src/sorters/by-modified.js","webpack:///./src/sorters/by-name.js","webpack:///./src/sorters/index.js","webpack:///./src/sorters/utils.js","webpack:///./src/utils.js","webpack:///./stories sync nonrecursive ^\\.[\\\\/](","webpack:///./stories/index.js","webpack:///./storybook-init-framework-entry.js","webpack:///./util.inspect (ignored)"],"sourcesContent":["import React from 'react';\nimport \"../dist/react-keyed-file-browser.css\"\n\nexport const decorators = [(Story) => <Story/>];","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgs, addArgTypes, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/home/cvenczel/FileBrowser/react-keyed-file-browser/node_modules/@storybook/builder-webpack4/node_modules/@storybook/client-api';\nimport * as config from '/home/cvenczel/FileBrowser/react-keyed-file-browser/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n      {\n        return addArgs(value);\n      }\n\n    case 'argTypes':\n      {\n        return addArgTypes(value);\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","var api = require(\"!../node_modules/@storybook/builder-webpack4/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/@storybook/builder-webpack4/node_modules/css-loader/dist/cjs.js??ref--7-1!../node_modules/@storybook/builder-webpack4/node_modules/postcss-loader/dist/cjs.js??ref--7-2!./react-keyed-file-browser.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/@storybook/builder-webpack4/node_modules/css-loader/dist/cjs.js??ref--7-1!../node_modules/@storybook/builder-webpack4/node_modules/postcss-loader/dist/cjs.js??ref--7-2!./react-keyed-file-browser.css\",\n      function () {\n        content = require(\"!!../node_modules/@storybook/builder-webpack4/node_modules/css-loader/dist/cjs.js??ref--7-1!../node_modules/@storybook/builder-webpack4/node_modules/postcss-loader/dist/cjs.js??ref--7-2!./react-keyed-file-browser.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/react\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('./stories', false, /^\\.[\\\\/](?:index\\.js)$/)], module, false);","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/@storybook/builder-webpack4/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"div.rendered-react-keyed-file-browser div.action-bar {\\n  margin-bottom: 0.5rem;\\n  flex-wrap: wrap;\\n  display: flex;\\n  align-items: flex-start; }\\n  div.rendered-react-keyed-file-browser div.action-bar input[type=\\\"search\\\"] {\\n    display: block;\\n    flex-grow: 2;\\n    min-width: 300px;\\n    padding: 0.25rem 0.5rem;\\n    line-height: 1em;\\n    margin-bottom: 0.5rem;\\n    border: 0.1rem solid #ddd; }\\n  div.rendered-react-keyed-file-browser div.action-bar .item-actions {\\n    text-align: right;\\n    margin: 0;\\n    padding: 0; }\\n  div.rendered-react-keyed-file-browser div.action-bar ul.item-actions {\\n    display: block;\\n    flex-grow: 1;\\n    min-width: 300px;\\n    margin-left: 10px;\\n    white-space: nowrap; }\\n    div.rendered-react-keyed-file-browser div.action-bar ul.item-actions li {\\n      display: inline-block;\\n      margin: 0; }\\n      div.rendered-react-keyed-file-browser div.action-bar ul.item-actions li:not(:last-child) {\\n        margin-right: 0.5rem; }\\n\\ndiv.rendered-react-keyed-file-browser div.files table {\\n  width: 100%;\\n  margin-bottom: 2rem;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none; }\\n  div.rendered-react-keyed-file-browser div.files table th, div.rendered-react-keyed-file-browser div.files table td {\\n    font-weight: normal;\\n    text-align: left;\\n    margin: 0;\\n    padding: 0.5rem; }\\n  div.rendered-react-keyed-file-browser div.files table th {\\n    font-weight: bold; }\\n  div.rendered-react-keyed-file-browser div.files table th.size, div.rendered-react-keyed-file-browser div.files table th.modified, div.rendered-react-keyed-file-browser div.files table td.size, div.rendered-react-keyed-file-browser div.files table td.modified {\\n    text-align: right; }\\n  div.rendered-react-keyed-file-browser div.files table th.name i, div.rendered-react-keyed-file-browser div.files table td.name i {\\n    padding-right: 0.5rem; }\\n  div.rendered-react-keyed-file-browser div.files table thead th {\\n    border-bottom: 0.1rem solid #ddd; }\\n  div.rendered-react-keyed-file-browser div.files table tr:not(:last-child) td {\\n    border-bottom: 0.1rem solid #eee; }\\n  div.rendered-react-keyed-file-browser div.files table td.name {\\n    padding-left: 0.8rem; }\\n    div.rendered-react-keyed-file-browser div.files table td.name form.renaming {\\n      display: flex;\\n      align-items: center; }\\n      div.rendered-react-keyed-file-browser div.files table td.name form.renaming i {\\n        flex-grow: 0;\\n        flex-shrink: 0; }\\n      div.rendered-react-keyed-file-browser div.files table td.name form.renaming input[type=\\\"text\\\"] {\\n        flex: 1 1; }\\n  div.rendered-react-keyed-file-browser div.files table tr td {\\n    cursor: pointer; }\\n  div.rendered-react-keyed-file-browser div.files table tr.selected td {\\n    font-weight: bold; }\\n    div.rendered-react-keyed-file-browser div.files table tr.selected td input, div.rendered-react-keyed-file-browser div.files table tr.selected td button {\\n      font-weight: normal; }\\n    div.rendered-react-keyed-file-browser div.files table tr.selected td.name {\\n      position: relative; }\\n      div.rendered-react-keyed-file-browser div.files table tr.selected td.name:after {\\n        content: ' ';\\n        position: absolute;\\n        left: 0;\\n        top: 0;\\n        width: 0.3rem;\\n        height: 100%;\\n        background: #1d4567; }\\n  div.rendered-react-keyed-file-browser div.files table tr.dragover td, div.rendered-react-keyed-file-browser div.files table tr.dragover th {\\n    background: #eee; }\\n\\ndiv.rendered-file-browser div.files li.file.pending, div.rendered-file-browser div.files li.file.dragging, div.rendered-file-browser div.files li.folder.pending, div.rendered-file-browser div.files li.folder.dragging {\\n  opacity: 0.4; }\\n\\ndiv.rendered-file-browser div.files li.file.dragover, div.rendered-file-browser div.files li.folder.dragover {\\n  background: #eee; }\\n\\ndiv.rendered-file-browser div.files li.file.selected > div.item, div.rendered-file-browser div.files li.folder.selected > div.item {\\n  color: #fff;\\n  background: #ccc; }\\n  div.rendered-file-browser div.files li.file.selected > div.item .text-muted, div.rendered-file-browser div.files li.folder.selected > div.item .text-muted {\\n    color: #e6e6e6; }\\n  div.rendered-file-browser div.files li.file.selected > div.item a:not(.btn), div.rendered-file-browser div.files li.file.selected > div.item.folder a:not(.btn), div.rendered-file-browser div.files li.file.selected > div.item i, div.rendered-file-browser div.files li.folder.selected > div.item a:not(.btn), div.rendered-file-browser div.files li.folder.selected > div.item.folder a:not(.btn), div.rendered-file-browser div.files li.folder.selected > div.item i {\\n    color: #fff; }\\n\\ndiv.rendered-file-browser div.files ul {\\n  list-style: none;\\n  padding: 0;\\n  display: grid;\\n  gap: 4px;\\n  grid-template-columns: repeat(3, 1fr); }\\n  div.rendered-file-browser div.files ul li.folder {\\n    grid-column: 1/4; }\\n    div.rendered-file-browser div.files ul li.folder > div.item {\\n      display: flex;\\n      flex-direction: row;\\n      align-items: center;\\n      padding-left: 4px;\\n      border: 1px solid #eee; }\\n      div.rendered-file-browser div.files ul li.folder > div.item span.name {\\n        flex: 1 1;\\n        line-height: folder-size; }\\n      div.rendered-file-browser div.files ul li.folder > div.item span.thumb {\\n        flex-basis: 45px;\\n        border: none;\\n        text-align: center; }\\n        div.rendered-file-browser div.files ul li.folder > div.item span.thumb > i {\\n          line-height: 45px;\\n          font-size: 18px; }\\n      div.rendered-file-browser div.files ul li.folder > div.item form.renaming {\\n        margin-top: 8px;\\n        margin-right: 8px; }\\n    div.rendered-file-browser div.files ul li.folder > p {\\n      margin: 8px;\\n      margin-bottom: 0;\\n      padding: 0; }\\n    div.rendered-file-browser div.files ul li.folder.expanded {\\n      padding-bottom: 8px;\\n      border-bottom: 1px solid #eee;\\n      border-left: 4px solid #eee;\\n      border-right: 1px solid #eee; }\\n      div.rendered-file-browser div.files ul li.folder.expanded > div.item {\\n        padding-left: 0px;\\n        margin-right: -1px;\\n        margin-left: -1px; }\\n      div.rendered-file-browser div.files ul li.folder.expanded.selected {\\n        border-bottom: 1px solid #ccc;\\n        border-left: 4px solid #ccc;\\n        border-right: 1px solid #ccc; }\\n  div.rendered-file-browser div.files ul li.selected.folder > div.item {\\n    border: 1px solid #bfbfbf; }\\n    div.rendered-file-browser div.files ul li.selected.folder > div.item span.thumb {\\n      border: none; }\\n  div.rendered-file-browser div.files ul li.file {\\n    margin: 4px;\\n    padding: 0; }\\n    div.rendered-file-browser div.files ul li.file > div.item {\\n      display: flex;\\n      flex-direction: column;\\n      padding: 4px;\\n      margin: 0; }\\n      div.rendered-file-browser div.files ul li.file > div.item span.thumb {\\n        flex-basis: 120px;\\n        text-align: center;\\n        position: relative;\\n        border: 1px solid #eee;\\n        margin-bottom: 10px; }\\n        div.rendered-file-browser div.files ul li.file > div.item span.thumb > i {\\n          font-size: 40px;\\n          line-height: 120px; }\\n        div.rendered-file-browser div.files ul li.file > div.item span.thumb div.image {\\n          position: absolute;\\n          top: 0;\\n          left: 0;\\n          width: 100%;\\n          height: 100%;\\n          background-size: cover;\\n          background-position: 50% 50%;\\n          background-repeat: no-repeat; }\\n  div.rendered-file-browser div.files ul li.selected.file > div.item span.thumb {\\n    border: 1px solid #bfbfbf; }\\n  div.rendered-file-browser div.files ul li.selected.file > div.item span.thumb div.image {\\n    opacity: 0.8; }\\n\\ndiv.rendered-file-browser p.loading, div.rendered-file-browser p.empty {\\n  margin: 16px 0; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Actions = (props) => {\n  const {\n    selectedItems,\n    isFolder,\n    icons,\n    nameFilter,\n\n    canCreateFolder,\n    onCreateFolder,\n\n    canRenameFile,\n    onRenameFile,\n\n    canRenameFolder,\n    onRenameFolder,\n\n    canDeleteFile,\n    onDeleteFile,\n\n    canDeleteFolder,\n    onDeleteFolder,\n\n    canDownloadFile,\n    onDownloadFile,\n\n    canDownloadFolder,\n    onDownloadFolder,\n\n  } = props\n\n  /** @type any */\n  let actions = []\n\n  if (selectedItems.length) {\n    // Something is selected. Build custom actions depending on what it is.\n    const selectedItemsAction = selectedItems.filter(item => item.action)\n    if (selectedItemsAction.length === selectedItems.length && [...new Set(selectedItemsAction)].length === 1) {\n      // Selected item has an active action against it. Disable all other actions.\n      let actionText\n      switch (selectedItemsAction[0].action) {\n        case 'delete':\n          actionText = 'Deleting ...'\n          break\n\n        case 'rename':\n          actionText = 'Renaming ...'\n          break\n\n        default:\n          actionText = 'Moving ...'\n          break\n      }\n\n      actions = (\n        // TODO: Enable plugging in custom spinner.\n        <div className=\"item-actions\">\n          {icons.Loading} {actionText}\n        </div>\n      )\n    } else {\n      if (isFolder && canCreateFolder && !nameFilter) {\n        actions.push(\n          <li key=\"action-add-folder\">\n            <a\n              onClick={onCreateFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Folder}\n              &nbsp;Add Subfolder\n            </a>\n          </li>\n        )\n      }\n\n      const itemsWithoutKeyDerived = selectedItems.find(item => !item.keyDerived)\n      if (!itemsWithoutKeyDerived && !isFolder && canRenameFile && selectedItems.length === 1) {\n        actions.push(\n          <li key=\"action-rename\">\n            <a\n              onClick={onRenameFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Rename}\n              &nbsp;Rename\n            </a>\n          </li>\n        )\n      } else if (!itemsWithoutKeyDerived && isFolder && canRenameFolder) {\n        actions.push(\n          <li key=\"action-rename\">\n            <a\n              onClick={onRenameFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Rename}\n              &nbsp;Rename\n            </a>\n          </li>\n        )\n      }\n\n      if (!itemsWithoutKeyDerived && !isFolder && canDeleteFile) {\n        actions.push(\n          <li key=\"action-delete\">\n            <a\n              onClick={onDeleteFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Delete}\n              &nbsp;Delete\n            </a>\n          </li>\n        )\n      } else if (!itemsWithoutKeyDerived && isFolder && canDeleteFolder) {\n        actions.push(\n          <li key=\"action-delete\">\n            <a\n              onClick={onDeleteFolder}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Delete}\n              &nbsp;Delete\n            </a>\n          </li>\n        )\n      }\n\n      if ((!isFolder && canDownloadFile) || (isFolder && canDownloadFolder)) {\n        actions.push(\n          <li key=\"action-download\">\n            <a\n              onClick={isFolder ? onDownloadFolder : onDownloadFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Download}\n              &nbsp;Download\n            </a>\n          </li>\n        )\n      }\n\n      if (actions.length) {\n        actions = (<ul className=\"item-actions\">{actions}</ul>)\n      } else {\n        actions = (<div className=\"item-actions\">&nbsp;</div>)\n      }\n    }\n  } else {\n    // Nothing selected: We're in the 'root' folder. Only allowed action is adding a folder.\n    if (canCreateFolder && !nameFilter) {\n      actions.push(\n        <li key=\"action-add-folder\">\n          <a\n            onClick={onCreateFolder}\n            href=\"#\"\n            role=\"button\"\n          >\n            {icons.Folder}\n            &nbsp;Add Folder\n          </a>\n        </li>\n      )\n    }\n\n    if (actions.length) {\n      actions = (<ul className=\"item-actions\">{actions}</ul>)\n    } else {\n      actions = (<div className=\"item-actions\">&nbsp;</div>)\n    }\n  }\n\n  return actions\n}\n\nActions.propTypes = {\n  selectedItems: PropTypes.arrayOf(PropTypes.object),\n  isFolder: PropTypes.bool,\n  icons: PropTypes.object,\n  nameFilter: PropTypes.string,\n\n  canCreateFolder: PropTypes.bool,\n  onCreateFolder: PropTypes.func,\n\n  canRenameFile: PropTypes.bool,\n  onRenameFile: PropTypes.func,\n\n  canRenameFolder: PropTypes.bool,\n  onRenameFolder: PropTypes.func,\n\n  canDeleteFile: PropTypes.bool,\n  onDeleteFile: PropTypes.func,\n\n  canDeleteFolder: PropTypes.bool,\n  onDeleteFolder: PropTypes.func,\n\n  canDownloadFile: PropTypes.bool,\n  onDownloadFile: PropTypes.func,\n\n  canDownloadFolder: PropTypes.bool,\n  onDownloadFolder: PropTypes.func,\n}\n\nActions.defaultProps = {\n  selectedItems: [],\n  isFolder: false,\n  icons: {},\n  nameFilter: '',\n\n  canCreateFolder: false,\n  onCreateFolder: null,\n\n  canRenameFile: false,\n  onRenameFile: null,\n\n  canRenameFolder: false,\n  onRenameFolder: null,\n\n  canDeleteFile: false,\n  onDeleteFile: null,\n\n  canDeleteFolder: false,\n  onDeleteFolder: null,\n\n  canDownloadFile: false,\n  onDownloadFile: null,\n\n  canDownloadFolder: false,\n  onDownloadFolder: null,\n}\n\nexport default Actions\n","import DefaultAction from './default'\n\nexport {\n  DefaultAction,\n}\n","// @ts-nocheck\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { moveFilesAndFolders } from './utils'\nimport { extensionMapping } from './constants.js'\n\nclass BaseFile extends React.Component {\n  static propTypes = {\n    fileKey: PropTypes.string,\n    url: PropTypes.string,\n\n    newKey: PropTypes.string,\n    isRenaming: PropTypes.bool,\n\n    connectDragSource: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n    isDragging: PropTypes.bool,\n    action: PropTypes.string,\n\n    browserProps: PropTypes.shape({\n      icons: PropTypes.object,\n      select: PropTypes.func,\n      beginAction: PropTypes.func,\n      endAction: PropTypes.func,\n      preview: PropTypes.func,\n\n      createFiles: PropTypes.func,\n      moveFile: PropTypes.func,\n      moveFolder: PropTypes.func,\n      renameFile: PropTypes.func,\n      deleteFile: PropTypes.func,\n    }),\n  }\n\n  state = {\n    newName: this.getName(),\n  }\n\n  selectFileNameFromRef(element) {\n    if (element) {\n      const currentName = element.value\n      const pointIndex = currentName.lastIndexOf('.')\n      element.setSelectionRange(0, pointIndex || currentName.length)\n      element.focus()\n    }\n  }\n\n  getName() {\n    let name = this.props.newKey || this.props.fileKey\n    const slashIndex = name.lastIndexOf('/')\n    if (slashIndex !== -1) {\n      name = name.substr(slashIndex + 1)\n    }\n    return name\n  }\n  getExtension() {\n    const blobs = this.props.fileKey.split('.')\n    return blobs[blobs.length - 1].toLowerCase().trim()\n  }\n\n  getFileType() {\n    return extensionMapping[this.getExtension()] || 'File'\n  }\n\n  handleFileClick = (event) => {\n    event && event.preventDefault()\n    this.props.browserProps.preview({\n      url: this.props.url,\n      name: this.getName(),\n      key: this.props.fileKey,\n      extension: this.getExtension(),\n    })\n  }\n  handleItemClick = (event) => {\n    event.stopPropagation()\n    this.props.browserProps.select(this.props.fileKey, 'file', event.ctrlKey || event.metaKey, event.shiftKey)\n  }\n  handleItemDoubleClick = (event) => {\n    event.stopPropagation()\n    this.handleFileClick()\n  }\n\n  handleRenameClick = (event) => {\n    if (!this.props.browserProps.renameFile) {\n      return\n    }\n    this.props.browserProps.beginAction('rename', this.props.fileKey)\n  }\n  handleNewNameChange = (event) => {\n    const newName = event.target.value\n    this.setState({ newName: newName })\n  }\n  handleRenameSubmit = (event) => {\n    if (event) {\n      event.preventDefault()\n    }\n    if (!this.props.browserProps.renameFile) {\n      return\n    }\n    const newName = this.state.newName.trim()\n    if (newName.length === 0) {\n      // todo: move to props handler\n      // window.notify({\n      //   style: 'error',\n      //   title: 'Invalid new file name',\n      //   body: 'File name cannot be blank',\n      // })\n      return\n    }\n    const invalidChar = ['/', '\\\\']\n    if (invalidChar.some(char => newName.indexOf(char) !== -1)) return\n    // todo: move to props handler\n    // window.notify({\n    //   style: 'error',\n    //   title: 'Invalid new file name',\n    //   body: 'File names cannot contain forward slashes.',\n    // })\n    let newKey = newName\n    const slashIndex = this.props.fileKey.lastIndexOf('/')\n    if (slashIndex !== -1) {\n      newKey = `${this.props.fileKey.substr(0, slashIndex)}/${newName}`\n    }\n    this.props.browserProps.renameFile(this.props.fileKey, newKey)\n  }\n\n  handleDeleteClick = (event) => {\n    if (!this.props.browserProps.deleteFile) {\n      return\n    }\n    this.props.browserProps.beginAction('delete', this.props.fileKey)\n  }\n  handleDeleteSubmit = (event) => {\n    event.preventDefault()\n    if (!this.props.browserProps.deleteFile) {\n      return\n    }\n\n    this.props.browserProps.deleteFile(this.props.browserProps.actionTargets)\n  }\n\n  handleCancelEdit = (event) => {\n    this.props.browserProps.endAction()\n  }\n\n  connectDND(render) {\n    const inAction = (this.props.isDragging || this.props.action)\n    if (\n      typeof this.props.browserProps.moveFile === 'function' &&\n      !inAction &&\n      !this.props.isRenaming\n    ) {\n      render = this.props.connectDragSource(render)\n    }\n    if (\n      typeof this.props.browserProps.createFiles === 'function' ||\n      typeof this.props.browserProps.moveFile === 'function' ||\n      typeof this.props.browserProps.moveFolder === 'function'\n    ) {\n      render = this.props.connectDropTarget(render)\n    }\n    return render\n  }\n}\n\nconst dragSource = {\n  beginDrag(props) {\n    if (\n      !props.browserProps.selection.length ||\n      !props.browserProps.selection.includes(props.fileKey)\n    ) {\n      props.browserProps.select(props.fileKey, 'file')\n    }\n    return {\n      key: props.fileKey,\n    }\n  },\n\n  endDrag(props, monitor, component) {\n    moveFilesAndFolders(props, monitor, component)\n  },\n}\n\nfunction dragCollect(connect, monitor) {\n  return {\n    connectDragPreview: connect.dragPreview(),\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  }\n}\n\nconst targetSource = {\n  drop(props, monitor) {\n    if (monitor.didDrop()) {\n      return\n    }\n    const key = props.newKey || props.fileKey\n    const slashIndex = key.lastIndexOf('/')\n    const path = (slashIndex !== -1) ? key.substr(0, slashIndex + 1) : ''\n    const item = monitor.getItem()\n    if (item.files && props.browserProps.createFiles) {\n      props.browserProps.createFiles(item.files, path)\n    }\n    return {\n      path: path,\n    }\n  },\n}\n\nfunction targetCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver({ shallow: true }),\n  }\n}\n\nconst BaseFileConnectors = {\n  dragSource,\n  dragCollect,\n  targetSource,\n  targetCollect,\n}\n\nexport default BaseFile\nexport {\n  BaseFileConnectors,\n}\n","// @ts-nocheck\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { moveFilesAndFolders } from './utils'\n\nclass BaseFolder extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    fileKey: PropTypes.string,\n    \n    // Use a unique icon + different functionality for gateway folder\n    isGateway: PropTypes.bool,\n\n    newName: PropTypes.string,\n    keyDerived: PropTypes.bool,\n    isDraft: PropTypes.bool,\n    isRenaming: PropTypes.bool,\n    isDeleting: PropTypes.bool,\n\n    connectDragSource: PropTypes.func,\n    connectDropTarget: PropTypes.func,\n    isDragging: PropTypes.bool,\n    action: PropTypes.string,\n\n    browserProps: PropTypes.shape({\n      select: PropTypes.func,\n      toggleFolder: PropTypes.func,\n      beginAction: PropTypes.func,\n      endAction: PropTypes.func,\n      preview: PropTypes.func,\n\n      createFiles: PropTypes.func,\n      createFolder: PropTypes.func,\n      moveFile: PropTypes.func,\n      moveFolder: PropTypes.func,\n      renameFolder: PropTypes.func,\n      deleteFolder: PropTypes.func,\n    }),\n  }\n\n  state = {\n    newName: this.props.isDraft ? 'New folder' : this.getName(),\n  }\n\n  selectFolderNameFromRef(element) {\n    if (element) {\n      const currentName = element.value\n      element.setSelectionRange(0, currentName.length)\n      element.focus()\n    }\n  }\n\n  getName() {\n    if (this.props.name) {\n      return this.props.name\n    }\n    const folders = this.props.fileKey.split('/')\n    return this.props.newName || folders[folders.length - 2]\n  }\n\n  handleFolderClick = (event) => {\n    event.stopPropagation()\n    this.props.browserProps.select(this.props.fileKey, 'folder', event.ctrlKey || event.metaKey, event.shiftKey)\n  }\n  handleFolderDoubleClick = (event) => {\n    event.stopPropagation()\n    this.toggleFolder()\n  }\n\n  handleRenameClick = (event) => {\n    if (!this.props.browserProps.renameFolder) {\n      return\n    }\n    this.props.browserProps.beginAction('rename', this.props.fileKey)\n  }\n  handleNewNameChange = (event) => {\n    const newName = event.target.value\n    this.setState({ newName: newName })\n  }\n  handleRenameSubmit = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (!this.props.browserProps.renameFolder && !this.props.isDraft) {\n      return\n    }\n    const newName = this.state.newName.trim()\n    if (newName.length === 0) {\n      // todo: move to props handler\n      // window.notify({\n      //   style: 'error',\n      //   title: 'Invalid new folder name',\n      //   body: 'Folder name cannot be blank',\n      // })\n      return\n    }\n    const invalidChar = ['/', '\\\\']\n    if (invalidChar.some(char => newName.indexOf(char) !== -1)) return\n    // todo: move to props handler\n    // window.notify({\n    //   style: 'error',\n    //   title: 'Invalid new folder name',\n    //   body: 'Folder names cannot contain forward slashes.',\n    // })\n\n    let newKey = this.props.fileKey.substr(0, this.props.fileKey.substr(0, this.props.fileKey.length - 1).lastIndexOf('/'))\n    if (newKey.length) {\n      newKey += '/'\n    }\n    newKey += newName\n    newKey += '/'\n    if (this.props.isDraft) {\n      this.props.browserProps.createFolder(newKey)\n    } else {\n      this.props.browserProps.renameFolder(this.props.fileKey, newKey)\n    }\n  }\n\n  handleDeleteClick = (event) => {\n    if (!this.props.browserProps.deleteFolder) {\n      return\n    }\n    this.props.browserProps.beginAction('delete', this.props.fileKey)\n  }\n  handleDeleteSubmit = (event) => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (!this.props.browserProps.deleteFolder) {\n      return\n    }\n    this.props.browserProps.deleteFolder(this.props.browserProps.actionTargets)\n  }\n\n  handleCancelEdit = (event) => {\n    this.props.browserProps.endAction()\n  }\n\n  toggleFolder = () => {\n    this.props.browserProps.toggleFolder(this.props.fileKey)\n  }\n\n  connectDND(render) {\n    const inAction = (this.props.isDragging || this.props.action)\n    if (this.props.keyDerived) {\n      if (\n        typeof this.props.browserProps.moveFolder === 'function' &&\n        !inAction &&\n        !this.props.isRenaming &&\n        !this.props.isDeleting\n      ) {\n        render = this.props.connectDragSource(render)\n      }\n      if (\n        typeof this.props.browserProps.createFiles === 'function' ||\n        typeof this.props.browserProps.moveFolder === 'function' ||\n        typeof this.props.browserProps.moveFile === 'function'\n      ) {\n        render = this.props.connectDropTarget(render)\n      }\n    }\n    return render\n  }\n}\n\nconst dragSource = {\n  beginDrag(props) {\n    if (!props.browserProps.selection.length) {\n      props.browserProps.select(props.fileKey, 'folder')\n    }\n    return {\n      key: props.fileKey,\n    }\n  },\n\n  endDrag(props, monitor, component) {\n    moveFilesAndFolders(props, monitor, component)\n  },\n}\n\nfunction dragCollect(connect, monitor) {\n  return {\n    connectDragPreview: connect.dragPreview(),\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  }\n}\n\nconst BaseFolderConnectors = {\n  dragSource,\n  dragCollect,\n}\n\nexport default BaseFolder\nexport {\n  BaseFolderConnectors,\n}\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n// drag and drop\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\n// default components (most overridable)\nimport { DefaultDetail } from './details'\nimport { DefaultFilter } from './filters'\n\n// default renderers\nimport { TableHeader } from './headers'\nimport { TableFile } from './files'\nimport { TableFolder } from './folders'\nimport { DefaultConfirmDeletion, MultipleConfirmDeletion } from './confirmations'\n\n// default processors\nimport { GroupByFolder } from './groupers'\nimport { SortByName } from './sorters'\n\nimport { isFolder } from './utils'\nimport { DefaultAction } from './actions'\n\nconst SEARCH_RESULTS_PER_PAGE = 20\nconst regexForNewFolderOrFileSelection = /.*\\/__new__[/]?$/gm\n\nfunction getItemProps(file, browserProps) {\n  return {\n    key: `file-${file.key}`,\n    fileKey: file.key,\n    isSelected: (browserProps.selection.includes(file.key)),\n    isOpen: file.key in browserProps.openFolders || browserProps.nameFilter,\n    isRenaming: browserProps.activeAction === 'rename' && browserProps.actionTargets.includes(file.key),\n    isDeleting: browserProps.activeAction === 'delete' && browserProps.actionTargets.includes(file.key),\n    isDraft: !!file.draft,\n  }\n}\n\nclass RawFileBrowser extends React.Component {\n  static propTypes = {\n    files: PropTypes.arrayOf(PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      modified: PropTypes.number,\n      size: PropTypes.number,\n    })).isRequired,\n    actions: PropTypes.node,\n    showActionBar: PropTypes.bool.isRequired,\n    canFilter: PropTypes.bool.isRequired,\n    showFoldersOnFilter: PropTypes.bool,\n    noFilesMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    noMatchingFilesMessage: PropTypes.func,\n    showMoreResults: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    group: PropTypes.func.isRequired,\n    sort: PropTypes.func.isRequired,\n\n    icons: PropTypes.shape({\n      Folder: PropTypes.element,\n      FolderOpen: PropTypes.element,\n      File: PropTypes.element,\n      PDF: PropTypes.element,\n      Image: PropTypes.element,\n      Delete: PropTypes.element,\n      Rename: PropTypes.element,\n      Loading: PropTypes.element,\n      Download: PropTypes.element,\n    }),\n\n    nestChildren: PropTypes.bool.isRequired,\n    renderStyle: PropTypes.oneOf([\n      'list',\n      'table',\n    ]).isRequired,\n\n    startOpen: PropTypes.bool.isRequired, // TODO: remove?\n\n    headerRenderer: PropTypes.func,\n    headerRendererProps: PropTypes.object,\n    filterRenderer: PropTypes.func,\n    filterRendererProps: PropTypes.object,\n    fileRenderer: PropTypes.func,\n    fileRendererProps: PropTypes.object,\n    folderRenderer: PropTypes.func,\n    folderRendererProps: PropTypes.object,\n    detailRenderer: PropTypes.func,\n    detailRendererProps: PropTypes.object,\n    actionRenderer: PropTypes.func,\n    confirmDeletionRenderer: PropTypes.func,\n    confirmMultipleDeletionRenderer: PropTypes.func,\n\n    onCreateFiles: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onCreateFolder: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onMoveFile: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onMoveFolder: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onRenameFile: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onRenameFolder: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onDeleteFile: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onDeleteFolder: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onDownloadFile: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    onDownloadFolder: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n    onSelect: PropTypes.func,\n    onSelectFile: PropTypes.func,\n    onSelectFolder: PropTypes.func,\n\n    onPreviewOpen: PropTypes.func,\n    onPreviewClose: PropTypes.func,\n\n    onFolderOpen: PropTypes.func,\n    onFolderClose: PropTypes.func,\n  }\n\n  static defaultProps = {\n    showActionBar: true,\n    canFilter: true,\n    showFoldersOnFilter: false,\n    noFilesMessage: 'No files.',\n    noMatchingFilesMessage: (filter) => `No files matching \"${filter}\".`,\n    showMoreResults: 'Show more results',\n\n    group: GroupByFolder,\n    sort: SortByName,\n\n    nestChildren: false,\n    renderStyle: 'table',\n\n    startOpen: false,\n\n    headerRenderer: TableHeader,\n    headerRendererProps: {},\n    filterRenderer: DefaultFilter,\n    filterRendererProps: {},\n    fileRenderer: TableFile,\n    fileRendererProps: {},\n    folderRenderer: TableFolder,\n    folderRendererProps: {},\n    detailRenderer: DefaultDetail,\n    detailRendererProps: {},\n    actionRenderer: DefaultAction,\n    confirmDeletionRenderer: DefaultConfirmDeletion,\n    confirmMultipleDeletionRenderer: MultipleConfirmDeletion,\n\n    icons: {},\n\n    onSelect: (fileOrFolder) => { }, // Always called when a file or folder is selected\n    onSelectFile: (file) => { }, //    Called after onSelect, only on file selection\n    onSelectFolder: (folder) => { }, //    Called after onSelect, only on folder selection\n\n    onPreviewOpen: (file) => { }, // File opened\n    onPreviewClose: (file) => { }, // File closed\n\n    onFolderOpen: (folder) => { }, // Folder opened\n    onFolderClose: (folder) => { }, // Folder closed\n  }\n\n  state = {\n    openFolders: {},\n    selection: [],\n    activeAction: null,\n    actionTargets: [],\n\n    nameFilter: '',\n    searchResultsShown: SEARCH_RESULTS_PER_PAGE,\n\n    previewFile: null,\n\n    addFolder: null,\n  }\n\n  componentDidMount() {\n    if (this.props.renderStyle === 'table' && this.props.nestChildren) {\n      console.warn('Invalid settings: Cannot nest table children in file browser')\n    }\n\n    window.addEventListener('click', this.handleGlobalClick)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.handleGlobalClick)\n  }\n\n  getFile = (key) => {\n    let hasPrefix = false\n    const exactFolder = this.props.files.find((f) => {\n      if (f.key.startsWith(key)) {\n        hasPrefix = true\n      }\n      return f.key === key\n    })\n    if (exactFolder) {\n      return exactFolder\n    }\n    if (hasPrefix) {\n      return { key, modified: 0, size: 0, relativeKey: key }\n    }\n  }\n\n  // item manipulation\n  createFiles = (files, prefix) => {\n    this.setState(prevState => {\n      const stateChanges = { selection: [] }\n      if (prefix) {\n        stateChanges.openFolders = {\n          ...prevState.openFolders,\n          [prefix]: true,\n        }\n      }\n      return stateChanges\n    }, () => {\n      this.props.onCreateFiles(files, prefix)\n    })\n  }\n\n  createFolder = (key) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n      selection: [key],\n    }, () => {\n      this.props.onCreateFolder(key)\n    })\n  }\n\n  moveFile = (oldKey, newKey) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n      selection: [newKey],\n    }, () => {\n      this.props.onMoveFile(oldKey, newKey)\n    })\n  }\n\n  moveFolder = (oldKey, newKey) => {\n    this.setState(prevState => {\n      const stateChanges = {\n        activeAction: null,\n        actionTargets: [],\n        selection: [newKey],\n      }\n      if (oldKey in prevState.openFolders) {\n        stateChanges.openFolders = {\n          ...prevState.openFolders,\n          [newKey]: true,\n        }\n      }\n      return stateChanges\n    }, () => {\n      this.props.onMoveFolder(oldKey, newKey)\n    })\n  }\n\n  renameFile = (oldKey, newKey) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n      selection: [newKey],\n    }, () => {\n      this.props.onRenameFile(oldKey, newKey)\n    })\n  }\n\n  renameFolder = (oldKey, newKey) => {\n    this.setState(prevState => {\n      const stateChanges = {\n        activeAction: null,\n        actionTargets: [],\n      }\n      if (prevState.selection[0].substr(0, oldKey.length) === oldKey) {\n        stateChanges.selection = [prevState.selection[0].replace(oldKey, newKey)]\n      }\n      if (oldKey in prevState.openFolders) {\n        stateChanges.openFolders = {\n          ...prevState.openFolders,\n          [newKey]: true,\n        }\n      }\n      return stateChanges\n    }, () => {\n      this.props.onRenameFolder(oldKey, newKey)\n    })\n  }\n\n  deleteFile = (keys) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n      selection: [],\n    }, () => {\n      this.props.onDeleteFile(keys)\n    })\n  }\n\n  deleteFolder = (key) => {\n    this.setState(prevState => {\n      const stateChanges = {\n        activeAction: null,\n        actionTargets: [],\n        selection: [],\n      }\n      if (key in prevState.openFolders) {\n        stateChanges.openFolders = { ...prevState.openFolders }\n        delete stateChanges.openFolders[key]\n      }\n      return stateChanges\n    }, () => {\n      this.props.onDeleteFolder(key)\n    })\n  }\n\n  downloadFile = (keys) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n    }, () => {\n      this.props.onDownloadFile(keys)\n    })\n  }\n\n  downloadFolder = (keys) => {\n    this.setState({\n      activeAction: null,\n      actionTargets: [],\n    }, () => {\n      this.props.onDownloadFolder(keys)\n    })\n  }\n\n  // browser manipulation\n  beginAction = (action, keys) => {\n    this.setState({\n      activeAction: action,\n      actionTargets: keys || [],\n    })\n  }\n\n  endAction = () => {\n    if (this.state.selection && this.state.selection.length > 0 && (\n      this.state.selection.filter((selection) => selection.match(regexForNewFolderOrFileSelection)).length > 0\n    )) {\n      this.setState({ selection: [] })\n    }\n    this.beginAction(null, null)\n  }\n\n  select = (key, selectedType, ctrlKey, shiftKey) => {\n    const { actionTargets } = this.state\n    const shouldClearState = actionTargets.length && !actionTargets.includes(key)\n    const selected = this.getFile(key)\n\n    let newSelection = [key]\n    if (ctrlKey || shiftKey) {\n      const indexOfKey = this.state.selection.indexOf(key)\n      if (indexOfKey !== -1) {\n        newSelection = [...this.state.selection.slice(0, indexOfKey), ...this.state.selection.slice(indexOfKey + 1)]\n      } else {\n        newSelection = [...this.state.selection, key]\n      }\n    }\n\n    this.setState(prevState => ({\n      selection: newSelection,\n      actionTargets: shouldClearState ? [] : actionTargets,\n      activeAction: shouldClearState ? null : prevState.activeAction,\n    }), () => {\n      this.props.onSelect(selected)\n\n      if (selectedType === 'file') this.props.onSelectFile(selected)\n      if (selectedType === 'folder') this.props.onSelectFolder(selected)\n    })\n  }\n\n  preview = (file) => {\n    if (this.state.previewFile && this.state.previewFile.key !== file.key) this.closeDetail()\n\n    this.setState({\n      previewFile: file,\n    }, () => {\n      this.props.onPreviewOpen(file)\n    })\n  }\n\n  closeDetail = () => {\n    this.setState({\n      previewFile: null,\n    }, () => {\n      this.props.onPreviewClose(this.state.previewFile)\n    })\n  }\n\n  handleShowMoreClick = (event) => {\n    event.preventDefault()\n    this.setState(prevState => ({\n      searchResultsShown: prevState.searchResultsShown + SEARCH_RESULTS_PER_PAGE,\n    }))\n  }\n\n  toggleFolder = (folderKey) => {\n    const isOpen = folderKey in this.state.openFolders\n    this.setState(prevState => {\n      const stateChanges = {\n        openFolders: { ...prevState.openFolders },\n      }\n      if (isOpen) {\n        delete stateChanges.openFolders[folderKey]\n      } else {\n        stateChanges.openFolders[folderKey] = true\n      }\n      return stateChanges\n    }, () => {\n      const callback = isOpen ? 'onFolderClose' : 'onFolderOpen'\n      this.props[callback](this.getFile(folderKey), this.getBrowserProps())\n    })\n  }\n\n  openFolder = (folderKey) => {\n    this.setState(prevState => ({\n      openFolders: {\n        ...prevState.openFolders,\n        [folderKey]: true,\n      },\n    }), () => {\n      this.props.onFolderOpen(this.getFile(folderKey), this.getBrowserProps())\n    })\n  }\n\n  // event handlers\n  handleGlobalClick = (event) => {\n    const inBrowser = !!(this.browserRef && this.browserRef.contains(event.target))\n\n    if (!inBrowser) {\n      this.setState({\n        selection: [],\n        actionTargets: [],\n        activeAction: null,\n      })\n    }\n  }\n  handleActionBarRenameClick = (event) => {\n    event.preventDefault()\n    this.beginAction('rename', this.state.selection)\n  }\n  handleActionBarDeleteClick = (event) => {\n    event.preventDefault()\n    this.beginAction('delete', this.state.selection)\n  }\n  handleActionBarAddFolderClick = (event) => {\n    event.preventDefault()\n    if (this.state.activeAction === 'createFolder') {\n      return\n    }\n    this.setState(prevState => {\n      let addKey = ''\n      if (prevState.selection && prevState.selection.length > 0) {\n        addKey += prevState.selection\n        if (addKey.substr(addKey.length - 1, addKey.length) !== '/') {\n          addKey += '/'\n        }\n      }\n\n      if (addKey !== '__new__/' && !addKey.endsWith('/__new__/')) addKey += '__new__/'\n      const stateChanges = {\n        actionTargets: [addKey],\n        activeAction: 'createFolder',\n        selection: [addKey],\n      }\n      if (prevState.selection && prevState.selection.length > 0) {\n        stateChanges.openFolders = {\n          ...prevState.openFolders,\n          [this.state.selection]: true,\n        }\n      }\n      return stateChanges\n    })\n  }\n  handleActionBarDownloadClick = (event) => {\n    event.preventDefault()\n\n    const files = this.getFiles()\n    const selectedItems = this.getSelectedItems(files)\n\n    const selectionIsFolder = (selectedItems.length === 1 && isFolder(selectedItems[0]))\n    if (selectionIsFolder) {\n      this.downloadFolder(this.state.selection)\n      return\n    }\n\n    this.downloadFile(this.state.selection)\n  }\n\n  updateFilter = (newValue) => {\n    this.setState({\n      nameFilter: newValue,\n      searchResultsShown: SEARCH_RESULTS_PER_PAGE,\n    })\n  }\n\n  getBrowserProps() {\n    return {\n      // browser config\n      nestChildren: this.props.nestChildren,\n      fileRenderer: this.props.fileRenderer,\n      fileRendererProps: this.props.fileRendererProps,\n      folderRenderer: this.props.folderRenderer,\n      folderRendererProps: this.props.folderRendererProps,\n      confirmDeletionRenderer: this.props.confirmDeletionRenderer,\n      confirmMultipleDeletionRenderer: this.props.confirmMultipleDeletionRenderer,\n      icons: this.props.icons,\n\n      // browser state\n      openFolders: this.state.openFolders,\n      nameFilter: this.state.nameFilter,\n      selection: this.state.selection,\n      activeAction: this.state.activeAction,\n      actionTargets: this.state.actionTargets,\n\n      // browser manipulation\n      select: this.select,\n      openFolder: this.openFolder,\n      toggleFolder: this.toggleFolder,\n      beginAction: this.beginAction,\n      endAction: this.endAction,\n      preview: this.preview,\n\n      // item manipulation\n      createFiles: this.props.onCreateFiles ? this.createFiles : undefined,\n      createFolder: this.props.onCreateFolder ? this.createFolder : undefined,\n      renameFile: this.props.onRenameFile ? this.renameFile : undefined,\n      renameFolder: this.props.onRenameFolder ? this.renameFolder : undefined,\n      moveFile: this.props.onMoveFile ? this.moveFile : undefined,\n      moveFolder: this.props.onMoveFolder ? this.moveFolder : undefined,\n      deleteFile: this.props.onDeleteFile ? this.deleteFile : undefined,\n      deleteFolder: this.props.onDeleteFolder ? this.deleteFolder : undefined,\n\n      getItemProps: getItemProps,\n    }\n  }\n\n  renderActionBar(selectedItems) {\n    const {\n      icons, canFilter,\n      filterRendererProps, filterRenderer: FilterRenderer,\n      actionRenderer: ActionRenderer,\n      onCreateFolder, onRenameFile, onRenameFolder,\n      onDeleteFile, onDeleteFolder, onDownloadFile,\n      onDownloadFolder,\n    } = this.props\n    const browserProps = this.getBrowserProps()\n    const selectionIsFolder = (selectedItems.length === 1 && isFolder(selectedItems[0]))\n    let filter\n    if (canFilter) {\n      filter = (\n        <FilterRenderer\n          value={this.state.nameFilter}\n          updateFilter={this.updateFilter}\n          {...filterRendererProps}\n        />\n      )\n    }\n\n    const actions = (\n      <ActionRenderer\n        browserProps={browserProps}\n\n        selectedItems={selectedItems}\n        isFolder={selectionIsFolder}\n\n        icons={icons}\n        nameFilter={this.state.nameFilter}\n\n        canCreateFolder={typeof onCreateFolder === 'function'}\n        onCreateFolder={this.handleActionBarAddFolderClick}\n\n        canRenameFile={typeof onRenameFile === 'function'}\n        onRenameFile={this.handleActionBarRenameClick}\n\n        canRenameFolder={typeof onRenameFolder === 'function'}\n        onRenameFolder={this.handleActionBarRenameClick}\n\n        canDeleteFile={typeof onDeleteFile === 'function'}\n        onDeleteFile={this.handleActionBarDeleteClick}\n\n        canDeleteFolder={typeof onDeleteFolder === 'function'}\n        onDeleteFolder={this.handleActionBarDeleteClick}\n\n        canDownloadFile={typeof onDownloadFile === 'function'}\n        onDownloadFile={this.handleActionBarDownloadClick}\n\n        canDownloadFolder={typeof onDownloadFolder === 'function'}\n        onDownloadFolder={this.handleActionBarDownloadClick}\n      />\n    )\n\n    return (\n      <div className=\"action-bar\">\n        {filter}\n        {actions}\n      </div>\n    )\n  }\n\n  renderFiles(files, depth) {\n    const {\n      fileRenderer: FileRenderer, fileRendererProps,\n      folderRenderer: FolderRenderer, folderRendererProps,\n    } = this.props\n    const browserProps = this.getBrowserProps()\n    let renderedFiles = []\n\n    files.map((file) => {\n      const thisItemProps = {\n        ...browserProps.getItemProps(file, browserProps),\n        depth: this.state.nameFilter ? 0 : depth,\n      }\n\n      if (!isFolder(file)) {\n        renderedFiles.push(\n          <FileRenderer\n            {...file}\n            {...thisItemProps}\n            browserProps={browserProps}\n            {...fileRendererProps}\n          />\n        )\n      } else {\n        if (this.props.showFoldersOnFilter || !this.state.nameFilter) {\n          renderedFiles.push(\n            <FolderRenderer\n              {...file}\n              {...thisItemProps}\n              browserProps={browserProps}\n              {...folderRendererProps}\n            />\n          )\n        }\n        if (this.state.nameFilter || (thisItemProps.isOpen && !browserProps.nestChildren)) {\n          renderedFiles = renderedFiles.concat(this.renderFiles(file.children, depth + 1))\n        }\n      }\n    })\n    return renderedFiles\n  }\n\n  handleMultipleDeleteSubmit = () => {\n    console.log(this)\n    this.deleteFolder(this.state.selection.filter(selection => selection[selection.length - 1] === '/'))\n    this.deleteFile(this.state.selection.filter(selection => selection[selection.length - 1] !== '/'))\n  }\n\n  getFiles() {\n    let files = this.props.files.concat([])\n    if (this.state.activeAction === 'createFolder') {\n      files.push({\n        key: this.state.actionTargets[0],\n        size: 0,\n        draft: true,\n      })\n    }\n    if (this.state.nameFilter) {\n      const filteredFiles = []\n      const terms = this.state.nameFilter.toLowerCase().split(' ')\n      files.map((file) => {\n        let skip = false\n        terms.map((term) => {\n          if (file.key.toLowerCase().trim().indexOf(term) === -1) {\n            skip = true\n          }\n        })\n        if (skip) {\n          return\n        }\n        filteredFiles.push(file)\n      })\n      files = filteredFiles\n    }\n    if (typeof this.props.group === 'function') {\n      files = this.props.group(files, '')\n    } else {\n      const newFiles = []\n      files.map((file) => {\n        if (!isFolder(file)) {\n          newFiles.push(file)\n        }\n      })\n      files = newFiles\n    }\n    if (typeof this.props.sort === 'function') {\n      files = this.props.sort(files)\n    }\n    return files\n  }\n\n  getSelectedItems(files) {\n    const { selection } = this.state\n    const selectedItems = []\n    const findSelected = (item) => {\n      if (selection.includes(item.key)) {\n        selectedItems.push(item)\n      }\n      if (item.children) {\n        item.children.map(findSelected)\n      }\n    }\n    files.map(findSelected)\n    return selectedItems\n  }\n\n  render() {\n    const browserProps = this.getBrowserProps()\n    const headerProps = {\n      browserProps,\n      fileKey: '',\n      fileCount: this.props.files.length,\n    }\n    let renderedFiles\n\n    const files = this.getFiles()\n    const selectedItems = this.getSelectedItems(files)\n\n    let header\n    /** @type any */\n    let contents = this.renderFiles(files, 0)\n    switch (this.props.renderStyle) {\n      case 'table':\n        if (!contents.length) {\n          if (this.state.nameFilter) {\n            contents = (\n              <tr>\n                <td colSpan={100}>\n                  {this.props.noMatchingFilesMessage(this.state.nameFilter)}\n                </td>\n              </tr>\n            )\n          } else {\n            contents = (\n              <tr>\n                <td colSpan={100}>\n                  {this.props.noFilesMessage}\n                </td>\n              </tr>\n            )\n          }\n        } else {\n          if (this.state.nameFilter) {\n            const numFiles = contents.length\n            contents = contents.slice(0, this.state.searchResultsShown)\n            if (numFiles > contents.length) {\n              contents.push(\n                <tr key=\"show-more\">\n                  <td colSpan={100}>\n                    <a\n                      onClick={this.handleShowMoreClick}\n                      href=\"#\"\n                    >\n                      {this.props.showMoreResults}\n                    </a>\n                  </td>\n                </tr>\n              )\n            }\n          }\n        }\n\n        if (this.props.headerRenderer) {\n          header = (\n            <thead>\n              <this.props.headerRenderer\n                {...headerProps}\n                {...this.props.headerRendererProps}\n              />\n            </thead>\n          )\n        }\n\n        renderedFiles = (\n          <table cellSpacing=\"0\" cellPadding=\"0\">\n            {header}\n            <tbody>\n              {contents}\n            </tbody>\n          </table>\n        )\n        break\n\n      case 'list':\n        if (!contents.length) {\n          if (this.state.nameFilter) {\n            contents = (<p className=\"empty\">{this.props.noMatchingFilesMessage(this.state.nameFilter)}</p>)\n          } else {\n            contents = (<p className=\"empty\">{this.props.noFilesMessage}</p>)\n          }\n        } else {\n          let more\n          if (this.state.nameFilter) {\n            const numFiles = contents.length\n            contents = contents.slice(0, this.state.searchResultsShown)\n            if (numFiles > contents.length) {\n              more = (\n                <a\n                  onClick={this.handleShowMoreClick}\n                  href=\"#\"\n                >\n                  {this.props.showMoreResults}\n                </a>\n              )\n            }\n          }\n          contents = (\n            <div>\n              <ul>{contents}</ul>\n              {more}\n            </div>\n          )\n        }\n\n        if (this.props.headerRenderer) {\n          header = (\n            <this.props.headerRenderer\n              {...headerProps}\n              {...this.props.headerRendererProps}\n            />\n          )\n        }\n\n        renderedFiles = (\n          <div>\n            {header}\n            {contents}\n          </div>\n        )\n        break\n    }\n\n    const ConfirmMultipleDeletionRenderer = this.props.confirmMultipleDeletionRenderer\n\n    return (\n      <div className=\"rendered-react-keyed-file-browser\">\n        {this.props.actions}\n        <div className=\"rendered-file-browser\" ref={el => { this.browserRef = el }}>\n          {this.props.showActionBar && this.renderActionBar(selectedItems)}\n          {this.state.activeAction === 'delete' && this.state.selection.length > 1 &&\n            <ConfirmMultipleDeletionRenderer\n              handleDeleteSubmit={this.handleMultipleDeleteSubmit}\n            />}\n          <div className=\"files\">\n            {renderedFiles}\n          </div>\n        </div>\n        {this.state.previewFile !== null && (\n          <this.props.detailRenderer\n            file={this.state.previewFile}\n            close={this.closeDetail}\n            {...this.props.detailRendererProps}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nclass FileBrowser extends Component {\n\n  render() {\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <RawFileBrowser {...this.props} />\n      </DndProvider>\n    )\n  }\n}\n\nexport default FileBrowser\n\nexport { RawFileBrowser }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ConfirmDeletion = (props) => {\n  const {\n    children,\n    handleDeleteSubmit,\n    handleFileClick,\n    url,\n  } = props\n\n  return (\n    <form className=\"deleting\" onSubmit={handleDeleteSubmit}>\n      <a\n        href={url}\n        download=\"download\"\n        onClick={handleFileClick}\n      >\n        {children}\n      </a>\n      <div>\n        <button type=\"submit\">\n          Confirm Deletion\n        </button>\n      </div>\n    </form>\n  )\n}\n\nConfirmDeletion.propTypes = {\n  children: PropTypes.node,\n  handleDeleteSubmit: PropTypes.func,\n  handleFileClick: PropTypes.func,\n  url: PropTypes.string,\n}\n\nConfirmDeletion.defaultProps = {\n  url: '#',\n}\n\nexport default ConfirmDeletion\n","import DefaultConfirmDeletion from './default'\nimport MultipleConfirmDeletion from './multiple'\n\nexport {\n  DefaultConfirmDeletion,\n  MultipleConfirmDeletion,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst MultipleConfirmDeletion = (props) => {\n  const {\n    handleDeleteSubmit,\n  } = props\n\n  return (\n    <button className=\"deleting\" onClick={handleDeleteSubmit}>\n      Confirm Deletion\n    </button>\n  )\n}\n\nMultipleConfirmDeletion.propTypes = {\n  handleDeleteSubmit: PropTypes.func,\n}\n\nexport default MultipleConfirmDeletion\n","const FILETYPE_EXTENSIONS = {\n  Archive: [\n    'zip',\n    'rar',\n    '7z',\n  ],\n  Audio: [\n    'mp3',\n    'ogg',\n    'wav',\n    'aac',\n  ],\n  Excel: [\n    'xls',\n    'xlsx',\n  ],\n  Image: [\n    'jpg',\n    'jpeg',\n    'png',\n    'bmp',\n  ],\n  PDF: [\n    'pdf',\n  ],\n  PowerPoint: [\n    'ppt',\n    'pptx',\n  ],\n  Text: [\n    'txt',\n  ],\n  Video: [\n    'mp4',\n    'flv',\n    'avi',\n    'wmv',\n    'mov',\n  ],\n  Word: [\n    'doc',\n    'docx',\n  ],\n  Code: [\n    'js',\n  ],\n}\n\nconst extensionMapping = {}\n\nfor (const [type, extensions] of Object.entries(FILETYPE_EXTENSIONS)) {\n  for (const extension of extensions) {\n    extensionMapping[extension] = type\n  }\n}\n\nexport { extensionMapping }\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nclass Detail extends React.Component {\n  static propTypes = {\n    file: PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      extension: PropTypes.string.isRequired,\n      url: PropTypes.string,\n    }).isRequired,\n    close: PropTypes.func,\n  }\n\n  handleCloseClick = (event) => {\n    if (event) {\n      event.preventDefault()\n    }\n    this.props.close()\n  }\n\n  render() {\n    let name = this.props.file.key.split('/')\n    name = name.length ? name[name.length - 1] : ''\n\n    return (\n      <div>\n        <h2>Sensor Details</h2>\n        <div>Sensor meta data goes here...</div>\n        <a href=\"#\" onClick={this.handleCloseClick}>Close</a>\n      </div>\n    )\n  }\n}\n\nexport default Detail\n","import DefaultDetail from './default.js'\n\nexport {\n  DefaultDetail,\n}\n","import ListThumbnailFile, { RawListThumbnailFile } from './list-thumbnail.js'\nimport SimpleListThumbnailFile from './simple-list-thumbnail.js'\nimport TableFile, { RawTableFile } from './table.js'\n\nexport {\n  ListThumbnailFile,\n  SimpleListThumbnailFile,\n  TableFile,\n\n  RawListThumbnailFile,\n  RawTableFile,\n}\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport { formatDistanceToNow } from 'date-fns'\nimport flow from 'lodash/flow'\n\nimport BaseFile, { BaseFileConnectors } from './../base-file.js'\nimport { fileSize } from './utils.js'\n\nclass RawListThumbnailFile extends BaseFile {\n  static defaultProps = {\n    showName: true,\n    showSize: true,\n    showModified: true,\n    isSelectable: true,\n  }\n\n  render() {\n    const {\n      thumbnail_url: thumbnailUrl, action, url,\n      isDragging, isRenaming, isSelected, isSelectable, isOver, isDeleting,\n      showName, showSize, showModified, browserProps, connectDragPreview,\n    } = this.props\n\n    let icon\n    if (thumbnailUrl) {\n      icon = (\n        <div\n          className=\"image\"\n          style={{\n            backgroundImage: 'url(' + thumbnailUrl + ')',\n          }}\n        />\n      )\n    } else {\n      icon = browserProps.icons[this.getFileType()] || browserProps.icons.File\n    }\n\n    const inAction = (isDragging || action)\n\n    const ConfirmDeletionRenderer = browserProps.confirmDeletionRenderer\n\n    let name\n    if (showName) {\n      if (!inAction && isDeleting && browserProps.selection.length === 1) {\n        name = (\n          <ConfirmDeletionRenderer\n            handleDeleteSubmit={this.handleDeleteSubmit}\n            handleFileClick={this.handleFileClick}\n            url={url}\n          >\n            {this.getName()}\n          </ConfirmDeletionRenderer>\n        )\n      } else if (!inAction && isRenaming) {\n        name = (\n          <form className=\"renaming\" onSubmit={this.handleRenameSubmit}>\n            <input\n              ref={this.selectFileNameFromRef}\n              type=\"text\"\n              value={this.state.newName}\n              onChange={this.handleNewNameChange}\n              onBlur={this.handleCancelEdit}\n              autoFocus\n            />\n          </form>\n        )\n      } else {\n        name = (\n          <a href={url} download=\"download\" onClick={this.handleFileClick}>\n            {this.getName()}\n          </a>\n        )\n      }\n    }\n\n    let size\n    if (showSize) {\n      if (!isRenaming && !isDeleting) {\n        size = (\n          <span className=\"size\"><small>{fileSize(this.props.size)}</small></span>\n        )\n      }\n    }\n    let modified\n    if (showModified) {\n      if (!isRenaming && !isDeleting) {\n        modified = (\n          <span className=\"modified\">\n            Last modified: {formatDistanceToNow(this.props.modified, { addSuffix: true })}\n          </span>\n        )\n      }\n    }\n\n    let rowProps = {}\n    if (isSelectable) {\n      rowProps = {\n        onClick: this.handleItemClick,\n      }\n    }\n\n    let row = (\n      <li\n        className={ClassNames('file', {\n          pending: action,\n          dragging: isDragging,\n          dragover: isOver,\n          selected: isSelected,\n        })}\n        onDoubleClick={this.handleItemDoubleClick}\n        {...rowProps}\n      >\n        <div className=\"item\">\n          <span className=\"thumb\">{icon}</span>\n          <span className=\"name\">{name}</span>\n          {size}\n          {modified}\n        </div>\n      </li>\n    )\n    if (typeof browserProps.moveFile === 'function') {\n      row = connectDragPreview(row)\n    }\n\n    return this.connectDND(row)\n  }\n}\n\nconst ListThumbnailFile = flow(\n  DragSource('file', BaseFileConnectors.dragSource, BaseFileConnectors.dragCollect), \n  DropTarget(['file', 'folder', NativeTypes.FILE], BaseFileConnectors.targetSource, BaseFileConnectors.targetCollect)\n)(RawListThumbnailFile)\n\nexport default ListThumbnailFile\nexport { RawListThumbnailFile }\n","import React from 'react'\n\nimport ListThumbnailFile from './list-thumbnail.js'\n\nclass SimpleListThumbnailFile extends React.Component {\n  render() {\n    return (\n      <ListThumbnailFile\n        {...this.props}\n        showName={false}\n        showSize={false}\n        showModified={false}\n        isSelectable={false}\n      />\n    )\n  }\n}\n\nexport default SimpleListThumbnailFile\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport { formatDistanceToNow } from 'date-fns'\nimport flow from 'lodash/flow'\n\nimport BaseFile, { BaseFileConnectors } from './../base-file.js'\nimport { fileSize } from './utils.js'\n\nclass RawTableFile extends BaseFile {\n  render() {\n    const {\n      isDragging, isDeleting, isRenaming, isOver, isSelected,\n      action, url, browserProps, connectDragPreview,\n      depth, size, modified, isSensor\n    } = this.props\n\n    const icon = browserProps.icons[isSensor ? \"Sensor\" : this.getFileType()] ||\n      browserProps.icons.File;\n    const inAction = (isDragging || action)\n\n    const ConfirmDeletionRenderer = browserProps.confirmDeletionRenderer\n\n    let name\n    if (!inAction && isDeleting && browserProps.selection.length === 1) {\n      name = (\n        <ConfirmDeletionRenderer\n          handleDeleteSubmit={this.handleDeleteSubmit}\n          handleFileClick={this.handleFileClick}\n          url={url}\n        >\n          {icon}\n          {this.getName()}\n        </ConfirmDeletionRenderer>\n      )\n    } else if (!inAction && isRenaming) {\n      name = (\n        <form className=\"renaming\" onSubmit={this.handleRenameSubmit}>\n          {icon}\n          <input\n            ref={this.selectFileNameFromRef}\n            type=\"text\"\n            value={this.state.newName}\n            onChange={this.handleNewNameChange}\n            onBlur={this.handleCancelEdit}\n            autoFocus\n          />\n        </form>\n      )\n    } else {\n      name = (\n        <a\n          href={url || '#'}\n          download=\"download\"\n          onClick={this.handleFileClick}\n        >\n          {icon}\n          {this.getName()}\n        </a>\n      )\n    }\n\n    let draggable = (\n      <div>\n        {name}\n      </div>\n    )\n    if (typeof browserProps.moveFile === 'function') {\n      draggable = connectDragPreview(draggable)\n    }\n\n    const row = (\n      <tr\n        className={ClassNames('file', {\n          pending: action,\n          dragging: isDragging,\n          dragover: isOver,\n          selected: isSelected,\n        })}\n        onClick={this.handleItemClick}\n        onDoubleClick={this.handleItemDoubleClick}\n      >\n        <td className=\"name\">\n          <div style={{ paddingLeft: (depth * 16) + 'px' }}>\n            {draggable}\n            {isSensor && (\n              <>\n                <button>Analysis</button>\n                <button>Data Log</button>\n              </>\n            )}\n          </div>\n        </td>\n      </tr>\n    )\n\n    return this.connectDND(row)\n  }\n}\n\nconst TableFile = flow(\n  DragSource('file', BaseFileConnectors.dragSource, BaseFileConnectors.dragCollect),\n  DropTarget(['file', 'folder', NativeTypes.FILE], BaseFileConnectors.targetSource, BaseFileConnectors.targetCollect)\n)(RawTableFile)\n\nexport default TableFile\nexport { RawTableFile }\n","function floatPrecision(floatValue, precision) {\n  floatValue = parseFloat(floatValue)\n  if (isNaN(floatValue)) { return parseFloat('0').toFixed(precision) } else {\n    const power = Math.pow(10, precision)\n    floatValue = (Math.round(floatValue * power) / power).toFixed(precision)\n    return floatValue.toString()\n  }\n}\n\nfunction fileSize(size) {\n  if (size > 1024) {\n    const kbSize = size / 1024\n    if (kbSize > 1024) {\n      const mbSize = kbSize / 1024\n      return `${floatPrecision(mbSize, 2)} MB`\n    }\n    return `${Math.round(kbSize)} kB`\n  }\n  return `${size} B`\n}\n\nexport { floatPrecision, fileSize }\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nclass Filter extends React.Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    updateFilter: PropTypes.func,\n  }\n\n  handleFilterChange = (event) => {\n    const newValue = event.target.value\n    this.props.updateFilter(newValue)\n  }\n\n  render() {\n    return (\n      <input\n        type=\"search\"\n        placeholder=\"Filter files\"\n        value={this.props.value}\n        onChange={this.handleFilterChange}\n      />\n    )\n  }\n}\n\nexport default Filter\n","import DefaultFilter from './default.js'\n\nexport {\n  DefaultFilter,\n}\n","import ListThumbnailFolder, { RawListThumbnailFolder } from './list-thumbnail.js'\nimport TableFolder, { RawTableFolder } from './table.js'\n\nexport {\n  ListThumbnailFolder,\n  TableFolder,\n\n  RawListThumbnailFolder,\n  RawTableFolder,\n}\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport flow from 'lodash/flow'\n\nimport BaseFolder, { BaseFolderConnectors } from './../base-folder.js'\nimport { BaseFileConnectors } from './../base-file.js'\n\nimport { isFolder } from '../utils'\n\nclass RawListThumbnailFolder extends BaseFolder {\n  render() {\n    const {\n      isOpen, isDragging, isDeleting, isRenaming, isDraft, isOver, isSelected,\n      url, action, browserProps, depth, keyDerived, connectDragPreview,\n    } = this.props\n\n    const icon = browserProps.icons[isOpen ? 'FolderOpen' : 'Folder']\n\n    const inAction = (isDragging || action)\n\n    const ConfirmDeletionRenderer = browserProps.confirmDeletionRenderer\n\n    let name\n    if (!inAction && isDeleting && browserProps.selection.length === 1) {\n      name = (\n        <ConfirmDeletionRenderer\n          handleDeleteSubmit={this.handleDeleteSubmit}\n          handleFileClick={this.handleFileClick}\n          url={url}\n        >\n          {this.getName()}\n        </ConfirmDeletionRenderer>\n      )\n    } else if ((!inAction && isRenaming) || isDraft) {\n      name = (\n        <div>\n          <form className=\"renaming\" onSubmit={this.handleRenameSubmit}>\n            <input\n              type=\"text\"\n              ref={this.selectFolderNameFromRef}\n              value={this.state.newName}\n              onChange={this.handleNewNameChange}\n              onBlur={this.handleCancelEdit}\n              autoFocus\n            />\n          </form>\n        </div>\n      )\n    } else {\n      name = (\n        <div>\n          <a onClick={this.toggleFolder}>\n            {this.getName()}\n          </a>\n        </div>\n      )\n    }\n\n    let children\n    if (isOpen && browserProps.nestChildren) {\n      children = []\n      for (let childIndex = 0; childIndex < children.length; childIndex++) {\n        const file = children[childIndex]\n\n        const thisItemProps = {\n          ...browserProps.getItemProps(file, browserProps),\n          depth: depth + 1,\n        }\n\n        if (!isFolder(file)) {\n          children.push(\n            <browserProps.fileRenderer\n              {...file}\n              {...thisItemProps}\n              browserProps={browserProps}\n              {...browserProps.fileRendererProps}\n            />\n          )\n        } else {\n          children.push(\n            <browserProps.folderRenderer\n              {...file}\n              {...thisItemProps}\n              browserProps={browserProps}\n              {...browserProps.folderRendererProps}\n            />\n          )\n        }\n      }\n      if (children.length) {\n        children = (<ul style={{ padding: '0 8px', paddingLeft: '16px' }}>{children}</ul>)\n      } else {\n        children = (<p>No items in this folder</p>)\n      }\n    }\n\n    let folder = (\n      <li\n        className={ClassNames('folder', {\n          expanded: isOpen && browserProps.nestChildren,\n          pending: action,\n          dragging: isDragging,\n          dragover: isOver,\n          selected: isSelected,\n        })}\n        onClick={this.handleFolderClick}\n        onDoubleClick={this.handleFolderDoubleClick}\n      >\n        <div className=\"item\">\n          <span className=\"thumb\">{icon}</span>\n          <span className=\"name\">{name}</span>\n        </div>\n        {children}\n      </li>\n    )\n    if (typeof browserProps.moveFolder === 'function' && keyDerived) {\n      folder = connectDragPreview(folder)\n    }\n\n    return this.connectDND(folder)\n  }\n}\n\nconst ListThumbnailFolder = flow(\n  DragSource('folder', BaseFolderConnectors.dragSource, BaseFolderConnectors.dragCollect), \n  DropTarget(['file', 'folder', NativeTypes.FILE], BaseFileConnectors.targetSource, BaseFileConnectors.targetCollect)\n)(RawListThumbnailFolder)\n\nexport default ListThumbnailFolder\nexport { RawListThumbnailFolder }\n","import React from 'react'\nimport ClassNames from 'classnames'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport flow from 'lodash/flow'\n\nimport BaseFolder, { BaseFolderConnectors } from './../base-folder.js'\nimport { BaseFileConnectors } from './../base-file.js'\n\nclass RawTableFolder extends BaseFolder {\n  render() {\n    const {\n      isOpen, isDragging, isDeleting, isRenaming, isDraft, isOver, isSelected,\n      action, url, browserProps, connectDragPreview, depth, isGateway\n    } = this.props\n\n    const icon = browserProps.icons[isGateway ? \n      'Gateway' :\n      (isOpen ? 'FolderOpen' : 'Folder')]\n    const inAction = (isDragging || action)\n\n    const ConfirmDeletionRenderer = browserProps.confirmDeletionRenderer\n\n    let name\n    if (!inAction && isDeleting && browserProps.selection.length === 1) {\n      name = (\n        <ConfirmDeletionRenderer\n          handleDeleteSubmit={this.handleDeleteSubmit}\n          handleFileClick={this.handleFileClick}\n          url={url}\n        >\n          {icon}\n          {this.getName()}\n        </ConfirmDeletionRenderer>\n      )\n    } else if ((!inAction && isRenaming) || isDraft) {\n      name = (\n        <div>\n          <form className=\"renaming\" onSubmit={this.handleRenameSubmit}>\n            {icon}\n            <input\n              type=\"text\"\n              ref={this.selectFolderNameFromRef}\n              value={this.state.newName}\n              onChange={this.handleNewNameChange}\n              onBlur={this.handleCancelEdit}\n              autoFocus\n            />\n          </form>\n        </div>\n      )\n    } else {\n      name = (\n        <div>\n          <a onClick={this.toggleFolder}>\n            {icon}\n            {this.getName()}\n          </a>\n        </div>\n      )\n    }\n\n    let draggable = (\n      <div>\n        {name}\n      </div>\n    )\n    if (typeof browserProps.moveFile === 'function') {\n      draggable = connectDragPreview(draggable)\n    }\n\n    const folder = (\n      <tr\n        className={ClassNames('folder', {\n          pending: action,\n          dragging: isDragging,\n          dragover: isOver,\n          selected: isSelected,\n        })}\n        onClick={this.handleFolderClick}\n        onDoubleClick={this.handleFolderDoubleClick}\n      >\n        <td className=\"name\">\n          <div style={{ paddingLeft: (depth * 16) + 'px' }}>\n            {draggable}\n            {isGateway && (\n              <>\n                <button>Edit</button>\n              </>\n            )}\n          </div>\n        </td>\n      </tr>\n    )\n\n    return this.connectDND(folder)\n  }\n}\n\nconst TableFolder = flow(\n  DragSource('folder', BaseFolderConnectors.dragSource, BaseFolderConnectors.dragCollect), \n  DropTarget(['file', 'folder', NativeTypes.FILE], BaseFileConnectors.targetSource, BaseFileConnectors.targetCollect)\n)(RawTableFolder)\n\nexport default TableFolder\nexport { RawTableFolder }\n","import { isFolder } from '../utils'\n\nexport default function(files, root) {\n  const fileTree = {\n    contents: [],\n    children: {},\n  }\n\n  files.map((file) => {\n    file.relativeKey = (file.newKey || file.key).substr(root.length)\n    let currentFolder = fileTree\n    const folders = file.relativeKey.split('/')\n    folders.map((folder, folderIndex) => {\n      if (folderIndex === folders.length - 1 && isFolder(file)) {\n        for (const key in file) {\n          currentFolder[key] = file[key]\n        }\n      }\n      if (folder === '') {\n        return\n      }\n      const isAFile = (!isFolder(file) && (folderIndex === folders.length - 1))\n      if (isAFile) {\n        currentFolder.contents.push({\n          ...file,\n          keyDerived: true,\n        })\n      } else {\n        if (folder in currentFolder.children === false) {\n          currentFolder.children[folder] = {\n            contents: [],\n            children: {},\n          }\n        }\n        currentFolder = currentFolder.children[folder]\n      }\n    })\n  })\n\n  function addAllChildren(level, prefix) {\n    if (prefix !== '') {\n      prefix += '/'\n    }\n    let files = []\n    for (const folder in level.children) {\n      files.push({\n        ...level.children[folder],\n        contents: undefined,\n        keyDerived: true,\n        key: root + prefix + folder + '/',\n        relativeKey: prefix + folder + '/',\n        children: addAllChildren(level.children[folder], prefix + folder),\n        size: 0,\n      })\n    }\n    files = files.concat(level.contents)\n    return files\n  }\n\n  files = addAllChildren(fileTree, '')\n  return files\n}\n","import { format, startOfMonth, endOfMonth } from 'date-fns'\nimport { relativeTimeWindows } from './utils'\nimport { isFolder } from '../utils'\n\nexport default function(files, root) {\n  const timeWindows = relativeTimeWindows()\n\n  for (let fileIndex = 0; fileIndex < files.length; fileIndex++) {\n    const file = files[fileIndex]\n    if (isFolder(file)) { continue }\n    const newFile = {\n      ...file,\n      keyDerived: true,\n    }\n\n    let allocated = false\n    const fileModified = +newFile.modified\n    for (let windex = 0; windex < timeWindows.length; windex++) {\n      const timeWindow = timeWindows[windex]\n      if (fileModified > +timeWindow.begins && fileModified <= +timeWindow.ends) {\n        timeWindow.items.push(newFile)\n        allocated = true\n        break\n      }\n    }\n    if (!allocated) {\n      const newWindow = {\n        name: format(newFile.modified, 'MMMM yyyy'),\n        begins: startOfMonth(newFile.modified),\n        ends: endOfMonth(newFile.modified),\n        items: [],\n      }\n      newWindow.items.push(newFile)\n      timeWindows.push(newWindow)\n    }\n  }\n\n  const grouped = []\n  for (let windex = 0; windex < timeWindows.length; windex++) {\n    const timeWindow = timeWindows[windex]\n    if (!timeWindow.items.length) { continue }\n    grouped.push({\n      key: `${timeWindow.name.toLowerCase().replace(' ', '_')}/`,\n      name: timeWindow.name,\n      children: timeWindow.items,\n      size: 0,\n    })\n  }\n\n  return grouped\n}\n","import GroupByFolder from './by-folder.js'\nimport GroupByModifiedRelative from './by-modified.js'\n\nexport {\n  GroupByFolder,\n  GroupByModifiedRelative,\n}\n","// @ts-nocheck\nimport {\n  startOfToday,\n  endOfToday,\n  startOfYesterday,\n  endOfYesterday,\n  startOfWeek,\n  endOfWeek,\n  addWeeks,\n  startOfMonth,\n  endOfMonth,\n  getMonth,\n} from 'date-fns'\n\nfunction relativeTimeWindows() {\n  const windows = []\n  const now = new Date()\n  windows.push({\n    name: 'Today',\n    begins: startOfToday(),\n    ends: endOfToday(),\n    items: [],\n  })\n  windows.push({\n    name: 'Yesterday',\n    begins: startOfYesterday(),\n    ends: endOfYesterday(),\n    items: [],\n  })\n  windows.push({\n    name: 'Earlier this Week',\n    begins: startOfWeek(now),\n    ends: endOfWeek(now),\n    items: [],\n  })\n  windows.push({\n    name: 'Last Week',\n    begins: startOfWeek(addWeeks(now, -1)),\n    ends: endOfWeek(addWeeks(now, -1)),\n    items: [],\n  })\n  if (getMonth(windows[windows.length - 1].begins) === getMonth(now)) {\n    windows.push({\n      name: 'Earlier this Month',\n      begins: startOfMonth(now),\n      ends: endOfMonth(now),\n      items: [],\n    })\n  }\n  return windows\n}\n\nexport { relativeTimeWindows }\n","import TableHeader from './table.js'\n\nexport {\n  TableHeader,\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport ClassNames from 'classnames'\n\nimport { DropTarget } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\n\nimport { BaseFileConnectors } from './../base-file.js'\n\nclass RawTableHeader extends React.Component {\n  static propTypes = {\n    select: PropTypes.func,\n    fileKey: PropTypes.string,\n\n    connectDropTarget: PropTypes.func,\n    isOver: PropTypes.bool,\n    isSelected: PropTypes.func,\n\n    browserProps: PropTypes.shape({\n      createFiles: PropTypes.func,\n      moveFolder: PropTypes.func,\n      moveFile: PropTypes.func,\n    }),\n  }\n\n  handleHeaderClick(event) {\n    this.props.select(this.props.fileKey)\n  }\n\n  render() {\n    const header = (\n      <tr\n        className={ClassNames('folder', {\n          dragover: this.props.isOver,\n          selected: this.props.isSelected,\n        })}\n      >\n        <th>Devices</th>\n      </tr>\n    )\n\n    if (\n      typeof this.props.browserProps.createFiles === 'function' ||\n      typeof this.props.browserProps.moveFile === 'function' ||\n      typeof this.props.browserProps.moveFolder === 'function'\n    ) {\n      return this.props.connectDropTarget(header)\n    } else {\n      return header\n    }\n  }\n}\n\nconst TableHeader = DropTarget(\n  ['file', 'folder', NativeTypes.FILE], \n  BaseFileConnectors.targetSource, \n  BaseFileConnectors.targetCollect\n)(RawTableHeader)\n\nexport default TableHeader\nexport { RawTableHeader }\n","import React from 'react'\n\n// See https://allthingssmitty.com/2016/09/12/checking-if-font-awesome-loaded/\nconst IsFontAwesomeLoaded = (version) => {\n  const prefix = version === 4 ? 'fa' : 'fas'\n  const fontNames = version === 4\n    ? ['FontAwesome', '\"FontAwesome\"']\n    : ['\"Font Awesome 5 Free\"', '\"Font Awesome 5 Pro\"']\n  let FontAwesomeLoaded = false\n  const span = document.createElement('span')\n\n  span.className = prefix\n  span.style.display = 'none'\n  document.body.insertBefore(span, document.body.firstChild)\n\n  const css = (element, property) => window.getComputedStyle(element, null).getPropertyValue(property)\n\n  if (!fontNames.includes(css(span, 'font-family'))) {\n    console.warn(\n      `Font Awesome ${version} was not detected but Font Awesome ${version} icons have been requested for \\`react-object-list\\``\n    )\n  } else {\n    FontAwesomeLoaded = true\n  }\n  document.body.removeChild(span)\n  return FontAwesomeLoaded\n}\n\nconst FontAwesomeIcons = (majorVersion = 4) => {\n  switch (majorVersion) {\n    case 4:\n      IsFontAwesomeLoaded(4)\n      return {\n        File: <i className=\"fa fa-file-o\" aria-hidden=\"true\" />,\n        Image: <i className=\"fa fa-file-image-o\" aria-hidden=\"true\" />,\n        Video: <i className=\"fa fa-file-video-o\" aria-hidden=\"true\" />,\n        Audio: <i className=\"fa fa-file-audio-o\" aria-hidden=\"true\" />,\n        Archive: <i className=\"fa fa-file-archive-o\" aria-hidden=\"true\" />,\n        Word: <i className=\"fa fa-file-word-o\" aria-hidden=\"true\" />,\n        Excel: <i className=\"fa fa-file-excel-o\" aria-hidden=\"true\" />,\n        PowerPoint: <i className=\"fa fa-file-powerpoint-o\" aria-hidden=\"true\" />,\n        Text: <i className=\"fa fa-file-text-o\" aria-hidden=\"true\" />,\n        PDF: <i className=\"fa fa-file-pdf-o\" aria-hidden=\"true\" />,\n        Rename: <i className=\"fa fa-i-cursor\" aria-hidden=\"true\" />,\n        Gateway: <i className=\"fa fa-wifi\" aria-hidden=\"true\" />,\n        Sensor: <i className=\"fa fa-bolt\" aria-hidden=\"true\" />,\n        Folder: <i className=\"fa fa-folder-o\" aria-hidden=\"true\" />,\n        FolderOpen: <i className=\"fa fa-folder-open-o\" aria-hidden=\"true\" />,\n        Delete: <i className=\"fa fa-trash-o\" aria-hidden=\"true\" />,\n        Loading: <i className=\"fa fa-circle-o-notch fa-spin\" aria-hidden=\"true\" />,\n        Download: <i className=\"fa fa-download\" aria-hidden=\"true\" />,\n      }\n    case 5:\n      IsFontAwesomeLoaded(5)\n      return {\n        File: <i className=\"far fa-file\" aria-hidden=\"true\" />,\n        Image: <i className=\"far fa-file-image\" aria-hidden=\"true\" />,\n        Video: <i className=\"far fa-file-video\" aria-hidden=\"true\" />,\n        Audio: <i className=\"far fa-file-audio\" aria-hidden=\"true\" />,\n        Archive: <i className=\"far fa-file-archive\" aria-hidden=\"true\" />,\n        Word: <i className=\"far fa-file-word\" aria-hidden=\"true\" />,\n        Excel: <i className=\"far fa-file-excel\" aria-hidden=\"true\" />,\n        PowerPoint: <i className=\"far fa-file-powerpoint\" aria-hidden=\"true\" />,\n        Text: <i className=\"far fa-file-alt\" aria-hidden=\"true\" />,\n        PDF: <i className=\"far fa-file-pdf\" aria-hidden=\"true\" />,\n        Rename: <i className=\"fas fa-i-cursor\" aria-hidden=\"true\" />,\n        Folder: <i className=\"far fa-folder\" aria-hidden=\"true\" />,\n        FolderOpen: <i className=\"far fa-folder-open\" aria-hidden=\"true\" />,\n        Delete: <i className=\"far fa-trash-alt\" aria-hidden=\"true\" />,\n        Loading: <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\" />,\n        Download: <i className=\"fas fa-download\" aria-hidden=\"true\" />,\n      }\n    default:\n      console.warn(\n        `Could not find config for version ${majorVersion}`,\n        'Accepted versions are: 4, 5',\n        'Please make an issue in `react-object-list` to fix this.'\n      )\n  }\n}\n\nexport default FontAwesomeIcons\n","export { default as FontAwesome } from './FontAwesome'\n","import FileBrowser, { RawFileBrowser } from './browser'\nimport BaseFile, { BaseFileConnectors } from './base-file'\nimport BaseFolder, { BaseFolderConnectors } from './base-folder'\n\nimport * as Headers from './headers'\nimport * as FileRenderers from './files'\nimport * as FolderRenderers from './folders'\n\nimport * as Details from './details'\nimport * as Filters from './filters'\nimport * as Groupers from './groupers'\nimport * as Sorters from './sorters'\nimport * as Icons from './icons'\nimport * as Utils from './utils'\n\nexport default FileBrowser\nexport {\n  RawFileBrowser, // Use this one if you want to wrap with dragdrop context yourself.\n\n  BaseFile,\n  BaseFileConnectors,\n  BaseFolder,\n  BaseFolderConnectors,\n\n  Headers,\n  FileRenderers,\n  FolderRenderers,\n\n  Details,\n  Filters,\n  Groupers,\n  Sorters,\n  Icons,\n  Utils,\n}\n","import { compareAsc } from 'date-fns'\n\nfunction lastModifiedSort(allFiles) {\n  const folders = []\n  let files = []\n  for (let fileIndex = 0; fileIndex < allFiles.length; fileIndex++) {\n    const file = allFiles[fileIndex]\n    const keyFolders = (file.newKey || file.key).split('/')\n    if (file.children) {\n      // file.name = keyFolders[keyFolders.length - 2]\n      folders.push(file)\n    } else {\n      file.name = keyFolders[keyFolders.length - 1]\n      files.push(file)\n    }\n  }\n\n  files = files.sort(compareAsc)\n\n  for (let folderIndex = 0; folderIndex < folders.length; folderIndex++) {\n    const folder = folders[folderIndex]\n    folder.children = lastModifiedSort(folder.children)\n  }\n\n  let sortedFiles = []\n  sortedFiles = sortedFiles.concat(folders)\n  sortedFiles = sortedFiles.concat(files)\n  return sortedFiles\n}\n\nexport default function(files) {\n  return lastModifiedSort(files)\n}\n","import { naturalSortComparer } from './utils.js'\n\nfunction naturalDraftComparer(a, b) {\n  if (a.draft && !b.draft) {\n    return 1\n  } else if (b.draft && !a.draft) {\n    return -1\n  }\n  return naturalSortComparer(a, b)\n}\n\nfunction naturalSort(allFiles) {\n  let folders = []\n  let files = []\n\n  for (let fileIndex = 0; fileIndex < allFiles.length; fileIndex++) {\n    const file = allFiles[fileIndex]\n    const keyFolders = (file.newKey || file.key).split('/')\n    if (file.children) {\n      if (!file.name) {\n        file.name = keyFolders[keyFolders.length - 2]\n      }\n      folders.push(file)\n    } else {\n      if (!file.name) {\n        file.name = keyFolders[keyFolders.length - 1]\n      }\n      files.push(file)\n    }\n  }\n\n  files = files.sort(naturalSortComparer)\n  folders = folders.sort(naturalDraftComparer)\n\n  for (let folderIndex = 0; folderIndex < folders.length; folderIndex++) {\n    const folder = folders[folderIndex]\n    folder.children = naturalSort(folder.children)\n  }\n\n  let sortedFiles = []\n  sortedFiles = sortedFiles.concat(folders)\n  sortedFiles = sortedFiles.concat(files)\n  return sortedFiles\n}\n\nexport default function(files) {\n  return naturalSort(files)\n}\n","import SortByName from './by-name.js'\nimport SortByModified from './by-modified.js'\n\nexport {\n  SortByName,\n  SortByModified,\n}\n","const NUMBER_GROUPS = /(-?\\d*\\.?\\d+)/g\n\nfunction naturalSortComparer(a, b) {\n  const aa = String(a.name).split(NUMBER_GROUPS)\n  const bb = String(b.name).split(NUMBER_GROUPS)\n  const min = Math.min(aa.length, bb.length)\n\n  for (let i = 0; i < min; i++) {\n    const x = parseFloat(aa[i]) || aa[i].toLowerCase()\n    const y = parseFloat(bb[i]) || bb[i].toLowerCase()\n    if (x < y) return -1\n    else if (x > y) return 1\n  }\n\n  return 0\n}\n\nexport { naturalSortComparer }\n","function isFolder(file) {\n  return file.key.endsWith('/')\n}\n\nfunction moveFilesAndFolders(props, monitor, component) {\n  if (!monitor.didDrop()) {\n    return\n  }\n\n  const dropResult = monitor.getDropResult()\n\n  const folders = []\n  const files = []\n\n  props.browserProps.selection.forEach(selection => {\n    selection[selection.length - 1] === '/' ? folders.push(selection) : files.push(selection)\n  })\n\n  props.browserProps.openFolder(dropResult.path)\n\n  folders\n    .forEach(selection => {\n      const fileKey = selection\n      const fileNameParts = fileKey.split('/')\n      const folderName = fileNameParts[fileNameParts.length - 2]\n\n      const newKey = `${dropResult.path}${folderName}/`\n      // abort if the new folder name contains itself\n      if (newKey.substr(0, fileKey.length) === fileKey) return\n\n      if (newKey !== fileKey && props.browserProps.moveFolder) {\n        props.browserProps.moveFolder(fileKey, newKey)\n      }\n    })\n\n  files\n    .forEach(selection => {\n      const fileKey = selection\n      const fileNameParts = fileKey.split('/')\n      const fileName = fileNameParts[fileNameParts.length - 1]\n      const newKey = `${dropResult.path}${fileName}`\n      if (newKey !== fileKey && props.browserProps.moveFile) {\n        props.browserProps.moveFile(fileKey, newKey)\n      }\n    })\n}\n\nexport { isFolder, moveFilesAndFolders }\n","var map = {\n\t\"./index.js\": \"./stories/index.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./stories sync ^\\\\.[\\\\\\\\/](?:index\\\\.js)$\";","import React from 'react'\nimport { addHours, subHours, subDays, subMonths } from 'date-fns'\nimport { State, Store } from '@sambego/storybook-state'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\n\nimport FileBrowser, { FileRenderers, FolderRenderers, Groupers, Icons, RawFileBrowser } from '../src'\nimport './stories'\n\nexport default {\n  title: 'File Browser',\n  component: FileBrowser,\n}\n\nconst files = [\n  {\n    key: 'animals/',\n    modified: addHours(new Date(), 1).getTime(),\n    size: 0,\n  },\n  {\n    key: 'animals/dog.png',\n    modified: subHours(new Date(), 1).getTime(),\n    size: 0,\n  },\n  {\n    key: 'cat.png',\n    modified: subHours(new Date(), 1).getTime(),\n    size: 1.5 * 1024 * 1024,\n  },\n  {\n    key: 'kitten.png',\n    modified: subDays(new Date(), 3).getTime(),\n    size: 545 * 1024,\n  },\n  {\n    key: 'elephant.png',\n    modified: subDays(new Date(), 3).getTime(),\n    size: 52 * 1024,\n  },\n]\n\nconst moreThan20Files = Array(21).fill(\n  {\n    key: 'cat.png',\n    modified: subHours(new Date(), 1).getTime(),\n    size: 1.5 * 1024 * 1024,\n  },\n)\n\nconst store = new Store({ files })\nconst dndStore = new Store({ files })\n\nexport const simpleFlatAndReadOnlyExample = () => <FileBrowser files={files} />\n\nexport const differentRendersAndGroupers = () => (\n  <FileBrowser\n    icons={Icons.FontAwesome(4)}\n    files={[\n      {\n        key: 'cat.js',\n        modified: subHours(new Date(), 1).getTime(),\n        size: 1.5 * 1024 * 1024,\n      },\n      {\n        key: 'kitten.png',\n        modified: subDays(new Date(), 3).getTime(),\n        size: 545 * 1024,\n      },\n      {\n        key: 'elephant.png',\n        modified: subDays(new Date(), 3).getTime(),\n        size: 52 * 1024,\n      },\n      {\n        key: 'dog.png',\n        modified: subHours(new Date(), 1).getTime(),\n        size: 1.5 * 1024 * 1024,\n      },\n      {\n        key: 'turtle.png',\n        modified: subMonths(new Date(), 3).getTime(),\n        size: 545 * 1024,\n      },\n      {\n        key: 'gecko.png',\n        modified: subDays(new Date(), 2).getTime(),\n        size: 52 * 1024,\n      },\n      {\n        key: 'centipede.png',\n        modified: subHours(new Date(), 0.5).getTime(),\n        size: 1.5 * 1024 * 1024,\n      },\n      {\n        key: 'possum.png',\n        modified: subDays(new Date(), 32).getTime(),\n        size: 545 * 1024,\n      },\n    ]}\n    renderStyle=\"list\"\n    headerRenderer={null}\n    group={Groupers.GroupByModifiedRelative}\n    fileRenderer={FileRenderers.ListThumbnailFile}\n    folderRenderer={FolderRenderers.ListThumbnailFolder}\n  />\n)\n\nexport const customerRenderAndCustomNoMatchingFilesMessage = () => (\n  <>\n    <p>Search for a string not contained in the file names in order to see the custom No Results message.</p>\n    <FileBrowser\n      files={files}\n      actionRenderer={() => (\n        <ul className=\"item-actions\">\n          <li key=\"action-sample\">\n            <a\n              href=\"#\"\n              role=\"button\"\n            >\n              Do nothing\n            </a>\n          </li>\n        </ul>\n      )}\n      noMatchingFilesMessage={(filter) => `There are no files that match \"${filter}\".`}\n    />\n  </>\n)\n\nexport const moreThan20FilesWithCustomShowMore = () => (\n  <>\n    <p>Search for \"cat\" to see the Show More Results message at the bottom of the table.</p>\n    <FileBrowser\n      files={moreThan20Files}\n      showMoreResults=\"Show me more results\"\n    />\n  </>\n)\n\nexport const emptyFilesListWithCustomNoFilesMessage = () => (\n  <FileBrowser\n    files={[]}\n    noFilesMessage=\"There are no files.\"\n  />\n)\n\nexport const groupByFolder = () => (\n  <FileBrowser\n    icons={Icons.FontAwesome(4)}\n    files={[\n      {\n        key: 'new-folder/',\n        modified: subHours(new Date(), 1).getTime(),\n        size: 0,\n      },\n      {\n        key: 'documents/sub-documents/word.doc',\n        modified: subHours(new Date(), 1).getTime(),\n        size: 1.5 * 1024 * 1024,\n      },\n      {\n        key: 'documents/sub-documents/presentation.pptx',\n        modified: subDays(new Date(), 3).getTime(),\n        size: 545 * 1024,\n      },\n      {\n        key: 'documents/plain.txt',\n        modified: subDays(new Date(), 3).getTime(),\n        size: 52 * 1024,\n      },\n      {\n        key: 'documents/pdf.pdf',\n        modified: subHours(new Date(), 1).getTime(),\n        size: 1.5 * 1024 * 1024,\n      },\n      {\n        key: 'documents/spreadsheet.xlsx',\n        modified: subMonths(new Date(), 3).getTime(),\n        size: 545 * 1024,\n      },\n      {\n        key: 'downloads/package.zip',\n        modified: subDays(new Date(), 2).getTime(),\n        size: 52 * 1024,\n      },\n      {\n        key: 'movies/video.mp4',\n        modified: subHours(new Date(), 0.5).getTime(),\n        size: 1.5 * 1024 * 1024,\n      },\n      {\n        key: 'music/song.mp3',\n        modified: subDays(new Date(), 32).getTime(),\n        size: 545 * 1024,\n      },\n    ]}\n    renderStyle=\"list\"\n    onDownloadFile={() => {}}\n    headerRenderer={null}\n    group={Groupers.GroupByFolder}\n    fileRenderer={FileRenderers.ListThumbnailFile}\n    folderRenderer={FolderRenderers.ListThumbnailFolder}\n  />\n)\n\nexport const simpleFlatAndReadOnlyExampleWithBulkActions = () => (\n  <State store={store}>\n    {(state) => (\n      <FileBrowser\n        icons={Icons.FontAwesome(4)}\n        onCreateFolder={(key) => {\n          store.set({\n            files: store.get('files').concat([\n              {\n                key: key,\n                modified: Date.now(),\n                size: (Math.floor(Math.random() * 100) + 1) * 1024,\n              },\n            ]),\n          })\n        }}\n        onCreateFiles={(files, prefix) => {\n          const newFiles = store.get('files').map((file) => {\n            let newKey = prefix\n            if (\n              prefix !== '' &&\n              prefix.substring(prefix.length - 1, prefix.length) !== '/'\n            ) {\n              newKey += '/'\n            }\n            newKey += file.name\n            return {\n              key: newKey,\n              size: file.size,\n              modified: Date.now(),\n            }\n          })\n\n          const uniqueNewFiles = []\n          newFiles.map((newFile) => {\n            let exists = false\n            state.files.map((existingFile) => {\n              if (existingFile.key === newFile.key) {\n                exists = true\n              }\n            })\n            if (!exists) {\n              uniqueNewFiles.push(newFile)\n            }\n          })\n          store.set({\n            files: store.get('files').concat(uniqueNewFiles),\n          })\n        }}\n        onMoveFolder={(oldKey, newKey) => {\n          const newFiles = []\n          store.get('files').map((file) => {\n            if (file.key.substr(0, oldKey.length) === oldKey) {\n              newFiles.push({\n                ...file,\n                key: file.key.replace(oldKey, newKey),\n                modified: Date.now(),\n              })\n            } else {\n              newFiles.push(file)\n            }\n          })\n          store.set({\n            files: newFiles,\n          })\n        }}\n        onMoveFile={(oldKey, newKey) => {\n          const newFiles = []\n          store.get('files').map((file) => {\n            if (file.key === oldKey) {\n              newFiles.push({\n                ...file,\n                key: newKey,\n                modified: Date.now(),\n              })\n            } else {\n              newFiles.push(file)\n            }\n          })\n          store.set({\n            files: newFiles,\n          })\n        }}\n        onRenameFolder={(oldKey, newKey) => {\n          const newFiles = []\n          store.get('files').map((file) => {\n            if (file.key.substr(0, oldKey.length) === oldKey) {\n              newFiles.push({\n                ...file,\n                key: file.key.replace(oldKey, newKey),\n                modified: Date.now(),\n              })\n            } else {\n              newFiles.push(file)\n            }\n          })\n          store.set({\n            files: newFiles,\n          })\n        }}\n        onRenameFile={(oldKey, newKey) => {\n          const newFiles = []\n          store.get('files').map((file) => {\n            if (file.key === oldKey) {\n              newFiles.push({\n                ...file,\n                key: newKey,\n                modified: Date.now(),\n              })\n            } else {\n              newFiles.push(file)\n            }\n          })\n          store.set({\n            files: newFiles,\n          })\n        }}\n        onDeleteFolder={(folderKeys) => {\n          const newFiles = []\n          store.get('files').map((file) => {\n            if (\n              !folderKeys.find(\n                (folderKey) =>\n                  file.key.substr(0, folderKey.length) === folderKey\n              )\n            ) {\n              newFiles.push(file)\n            }\n          })\n          store.set({\n            files: newFiles,\n          })\n        }}\n        onDeleteFile={(fileKeys) => {\n          store.set({\n            files: store\n              .get('files')\n              .filter((file) => !fileKeys.includes(file.key)),\n          })\n        }}\n        onDownloadFile={(fileKeys) => {\n          console.log('Downloading files: ', fileKeys)\n        }}\n        files={state.files}\n      />\n    )}\n  </State>\n)\n\nexport const withCustomDNDProvider = () => (\n  <State store={dndStore}>\n    {(state) => (\n      <DndProvider backend={HTML5Backend}>\n        <RawFileBrowser\n          icons={Icons.FontAwesome(4)}\n          onCreateFolder={(key) => {\n            dndStore.set({\n              files: dndStore.get('files').concat([\n                {\n                  key: key,\n                  modified: Date.now(),\n                  size: (Math.floor(Math.random() * 100) + 1) * 1024,\n                },\n              ]),\n            })\n          }}\n          onCreateFiles={(files, prefix) => {\n            const newFiles = dndStore.get('files').map((file) => {\n              let newKey = prefix\n              if (\n                prefix !== '' &&\n              prefix.substring(prefix.length - 1, prefix.length) !== '/'\n              ) {\n                newKey += '/'\n              }\n              newKey += file.name\n              return {\n                key: newKey,\n                size: file.size,\n                modified: Date.now(),\n              }\n            })\n\n            const uniqueNewFiles = []\n            newFiles.map((newFile) => {\n              let exists = false\n              state.files.map((existingFile) => {\n                if (existingFile.key === newFile.key) {\n                  exists = true\n                }\n              })\n              if (!exists) {\n                uniqueNewFiles.push(newFile)\n              }\n            })\n            dndStore.set({\n              files: dndStore.get('files').concat(uniqueNewFiles),\n            })\n          }}\n          onMoveFolder={(oldKey, newKey) => {\n            const newFiles = []\n            dndStore.get('files').map((file) => {\n              if (file.key.substr(0, oldKey.length) === oldKey) {\n                newFiles.push({\n                  ...file,\n                  key: file.key.replace(oldKey, newKey),\n                  modified: Date.now(),\n                })\n              } else {\n                newFiles.push(file)\n              }\n            })\n            dndStore.set({\n              files: newFiles,\n            })\n          }}\n          onMoveFile={(oldKey, newKey) => {\n            const newFiles = []\n            dndStore.get('files').map((file) => {\n              if (file.key === oldKey) {\n                newFiles.push({\n                  ...file,\n                  key: newKey,\n                  modified: Date.now(),\n                })\n              } else {\n                newFiles.push(file)\n              }\n            })\n            dndStore.set({\n              files: newFiles,\n            })\n          }}\n          onRenameFolder={(oldKey, newKey) => {\n            const newFiles = []\n            dndStore.get('files').map((file) => {\n              if (file.key.substr(0, oldKey.length) === oldKey) {\n                newFiles.push({\n                  ...file,\n                  key: file.key.replace(oldKey, newKey),\n                  modified: Date.now(),\n                })\n              } else {\n                newFiles.push(file)\n              }\n            })\n            dndStore.set({\n              files: newFiles,\n            })\n          }}\n          onRenameFile={(oldKey, newKey) => {\n            const newFiles = []\n            dndStore.get('files').map((file) => {\n              if (file.key === oldKey) {\n                newFiles.push({\n                  ...file,\n                  key: newKey,\n                  modified: Date.now(),\n                })\n              } else {\n                newFiles.push(file)\n              }\n            })\n            dndStore.set({\n              files: newFiles,\n            })\n          }}\n          onDeleteFolder={(folderKeys) => {\n            const newFiles = []\n            dndStore.get('files').map((file) => {\n              if (\n                !folderKeys.find(\n                  (folderKey) =>\n                    file.key.substr(0, folderKey.length) === folderKey\n                )\n              ) {\n                newFiles.push(file)\n              }\n            })\n            dndStore.set({\n              files: newFiles,\n            })\n          }}\n          onDeleteFile={(fileKeys) => {\n            dndStore.set({\n              files: dndStore\n                .get('files')\n                .filter((file) => !fileKeys.includes(file.key)),\n            })\n          }}\n          onDownloadFile={(fileKeys) => {\n            console.log('Downloading files: ', fileKeys)\n          }}\n          files={state.files}\n        />\n      </DndProvider>\n    )}\n  </State>\n)\n","import '@storybook/react';","/* (ignored) */"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA;AAsEA;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFA;AACA;AACA;AAEA;AACA;AACA;AADA;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AADA;AAWA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AADA;AAWA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AADA;AAWA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AADA;AAWA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AADA;AAWA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AADA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AADA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAzBA;AA4BA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAzBA;AA4BA;;;;;;;;;;;;;AC/OA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AA4BA;AACA;AADA;AACA;AA6BA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAkFA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AACA;;;;AA3JA;AACA;AADA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAXA;AAZA;AA6JA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAfA;AACA;AAiBA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAfA;AACA;AAiBA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAmCA;AACA;AADA;AACA;AAmkFA;AACA;AACA;AAAA;AACA;AAMA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AACA;;;;AA3JA;AACA;AADA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAZA;AAlBA;AA6JA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAZA;AACA;AAcA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/LA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAXA;AACA;AAyBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAmJA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AA/dA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AA8TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AApCA;AAsCA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AAMA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AA5BA;AACA;AA+BA;AACA;AAAA;AAAA;AAKA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AAEA;AAFA;AACA;AAIA;AACA;AAIA;AAHA;AAOA;AACA;AACA;AAIA;AAHA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AADA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AAOA;AACA;AACA;AAAA;AACA;AACA;AAAA;AADA;AAKA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAKA;AA5GA;AACA;AA8GA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AADA;AAGA;AAAA;AAAA;AANA;AAYA;AACA;AAFA;AAbA;AAqBA;;;;AAnzBA;AACA;AADA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAtEA;AADA;AA2EA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAzCA;AACA;AA2uBA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAIA;;;;AARA;AACA;AAUA;;;;;;;;;;;;;;ACv2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAOA;AACA;AAAA;AAAA;AADA;AARA;AAeA;AACA;AAzBA;AA0BA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AADA;AAIA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAXA;AAYA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAKA;AAMA;AAIA;AAMA;AAGA;AAIA;AAGA;AAOA;AAIA;AA3CA;AAgDA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;;;;AAEA;;;;;;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;;;;AA7BA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AA+BA;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AAEA;;;;;;;;;;;;;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AACA;AAEA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AAAA;AAUA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAVA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;;;;AArHA;AACA;AADA;AAEA;AACA;AACA;AACA;AAJA;AAuHA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvIA;AAEA;;;AAEA;;;;;;;;;;;;;AACA;AACA;AAGA;AACA;AACA;AACA;AALA;AAQA;;;;AAXA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;AAEA;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AAEA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAYA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AASA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AARA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAFA;AAHA;AADA;AAVA;AACA;AAuBA;AACA;;;;AAxFA;AACA;AA0FA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;;;AAEA;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;;;;AApBA;AACA;AADA;AAEA;AACA;AAFA;AAsBA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;AAEA;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAEA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AADA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AAFA;AACA;AAIA;AACA;AAIA;AAHA;AAOA;AACA;AAIA;AAHA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AATA;AAWA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAXA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;;;;AA/GA;AACA;AAiHA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;AAEA;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;AAEA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AADA;AAcA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AARA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AADA;AAHA;AADA;AAVA;AACA;AAsBA;AACA;;;;AAvFA;AACA;AAyFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGA;AAEA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AACA;AAEA;;;AAEA;;;;;;;;;;;;;AAgBA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AAFA;AADA;AAMA;AAAA;AANA;AACA;AASA;AAKA;AACA;AACA;AACA;AACA;;;;AAzCA;AACA;AADA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AARA;AA2CA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;;;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAlBA;AACA;AAmBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAhBA;AACA;AAiBA;AACA;AA5CA;AAkDA;AACA;AACA;;;;;;;;;;;;;ACjFA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AAEA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAOA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAhDA;AADA;AAAA;AAqDA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AAAA;AADA;AADA;AADA;AAYA;AAAA;AAAA;AAdA;AAFA;AADA;AAsBA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAFA;AADA;AAUA;AAAA;AAEA;AACA;AAFA;AADA;AAAA;AAOA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAtDA;AADA;AAAA;AA2DA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAFA;AASA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AA5IA;AADA;AADA;AADA;AAAA;AAqJA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAFA;AASA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AA5IA;AADA;AADA;AADA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACnWA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}